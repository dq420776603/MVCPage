<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="Spring.Core.Tests.dll" total="2502" errors="0" failures="0" not-run="20" inconclusive="0" ignored="20" skipped="0" invalid="0" date="2011-07-24" time="11:33:04">
  <environment nunit-version="2.5.7.10213" clr-version="2.0.50727.3620" os-version="Microsoft Windows NT 5.2.3790 Service Pack 2" platform="Win32NT" cwd="F:\bamboo-home\xml-data\build-dir\SPRNET-DAILY-JOB1\build\net\4.0\release" machine-name="NEWYORK" user="bamboo-agent" user-domain="NEWYORK" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="Spring.Core.Tests.dll" executed="True" result="Success" success="True" time="20.313" asserts="0">
    <results>
      <test-suite type="Namespace" name="Spring" executed="True" result="Success" success="True" time="20.297" asserts="0">
        <results>
          <test-suite type="Namespace" name="Caching" executed="True" result="Success" success="True" time="0.500" asserts="0">
            <results>
              <test-suite type="TestFixture" name="AbstractCacheTests" executed="True" result="Success" success="True" time="0.234" asserts="0">
                <results>
                  <test-case name="Spring.Caching.AbstractCacheTests.AppliesPerCacheDefaultsIfEnfored" executed="True" result="Success" success="True" time="0.203" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.AppliesPerCacheDefaultsIfNoPerItemValuesGiven" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.AppliesPerCacheDefaultsIfTTLLessThanZero" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.AppliesPerItemTTLIfTTLGreaterZero" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.AppliesZeroTTLIfTTLIsZero" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.ClearCausesCallToRemoveAllUsingKeys" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.CountUsingKeys" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Caching.AbstractCacheTests.RemoveAllCausesCallsToRemove" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.AbstractCacheTests.TestDefaults" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="BaseCacheAttributeTests" executed="True" result="Success" success="True" time="0.266" asserts="0">
                <results>
                  <test-case name="Spring.Caching.BaseCacheAttributeTests.AllowsForExtendedTimeSpanConverterSyntax" executed="True" result="Success" success="True" time="0.063" asserts="1" />
                  <test-case name="Spring.Caching.BaseCacheAttributeTests.CacheNameIsSet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Caching.BaseCacheAttributeTests.ConditionIsParsed" executed="True" result="Success" success="True" time="0.203" asserts="1" />
                  <test-case name="Spring.Caching.BaseCacheAttributeTests.KeyCannotBeEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.BaseCacheAttributeTests.KeyCannotBeNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Caching.BaseCacheAttributeTests.KeyIsParsed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Collections" executed="True" result="Success" success="True" time="0.250" asserts="0">
            <results>
              <test-suite type="TestFixture" name="AbstractQueueTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.AbstractQueueTests.AddAll1" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.AddAllSelf" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.AddFail" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.AddNPE" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.AddSucceed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.AbstractQueueTests.ElementF" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.ElementSucceed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.RemoveFail" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.AbstractQueueTests.RemoveSucceed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CaseInsensitiveHashtableTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Collections.CaseInsensitiveHashtableTests.AcceptsNonStringKeys" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.CaseInsensitiveHashtableTests.IgnoresCase" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.CaseInsensitiveHashtableTests.InitializeFromOtherCopiesValues" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.CaseInsensitiveHashtableTests.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Generic" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ReadOnlyDictionaryTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Collections.Generic.ReadOnlyDictionaryTests.Exceptions" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Collections.Generic.ReadOnlyDictionaryTests.TestSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="HashedSetTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Add" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.AddAll" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.AddAllDuplicated" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.AddDuplicate" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.AddNull" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Clear" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.ContainsAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.CopiesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.EnumeratesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.ExclusiveOr" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Intersect" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.IsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Minus" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.RemoveAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.RemoveNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.RetainAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HashedSetTests.SetTests.Union" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="HybridSetTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Add" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.AddAll" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.AddAllDuplicated" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.AddDuplicate" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.AddNull" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Clear" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.ContainsAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.CopiesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.EnumeratesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.ExclusiveOr" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Intersect" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.IsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Minus" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.RemoveAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.RemoveNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.RetainAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.HybridSetTests.SetTests.Union" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ImmutableSetTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Collections.ImmutableSetTests.Add" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.AddAll" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.Clear" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.ClonedInstanceMustStillBeImmutable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ImmutableSetTests.ContainsAll" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ImmutableSetTests.CopyTo" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.ImmutableSetTests.EnumeratesOk" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.ImmutableSetTests.ExclusiveOrYieldsImmutableCone" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ImmutableSetTests.IntersectionYieldsImmutableCone" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ImmutableSetTests.IsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ImmutableSetTests.MinusYieldsImmutableCone" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ImmutableSetTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.RemoveAll" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.RetainAll" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.ImmutableSetTests.UnionYieldsImmutableCone" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LinkedListTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.LinkedListTests.AddMultipleObjects" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.LinkedListTests.ConstructorWithIList" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.LinkedListTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Collections.LinkedListTests.CopyToWithIndexGreaterThanArrayLength" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.LinkedListTests.CopyToWithInsufficientSizeArray" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.LinkedListTests.CopyToWithNegativeIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.LinkedListTests.CopyToWithNonZeroIndex" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.LinkedListTests.CopyToWithNullArray" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.LinkedListTests.CopyToWithZeroIndex" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.LinkedListTests.Enumerator" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.LinkedListTests.EnumeratorModification" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.LinkedListTests.IndexOfObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.LinkedListTests.Insert" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.LinkedListTests.RemoveAt" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.LinkedListTests.RemoveAtOnEmptyLinkedList" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.LinkedListTests.RemoveObject" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ListSetTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Add" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.AddAll" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.AddAllDuplicated" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.AddDuplicate" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.AddNull" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Clear" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.ContainsAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.CopiesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.EnumeratesNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.ExclusiveOr" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Intersect" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.IsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Minus" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.RemoveAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.RemoveNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.RetainAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.ListSetTests.SetTests.Union" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PriorityQueueTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-case name="Spring.Collections.PriorityQueueTests.AddAllWithCollection" executed="True" result="Success" success="True" time="0.000" asserts="22" />
                  <test-case name="Spring.Collections.PriorityQueueTests.AddAllWithCollectionWithNullElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.AddAllWithCollectionWithSomeNullElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.AddAllWithNullElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.AddWithComparableElements" executed="True" result="Success" success="True" time="0.000" asserts="40" />
                  <test-case name="Spring.Collections.PriorityQueueTests.AddWithNullObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Clear" executed="True" result="Success" success="True" time="0.000" asserts="27" />
                  <test-case name="Spring.Collections.PriorityQueueTests.CompleteQueueCopyToArrayWithValidSize" executed="True" result="Success" success="True" time="0.000" asserts="43" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ConstructorFromExistingCollection" executed="True" result="Success" success="True" time="0.016" asserts="21" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ConstructorUsingComparator" executed="True" result="Success" success="True" time="0.000" asserts="22" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="63" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ContainsAll" executed="True" result="Success" success="True" time="0.000" asserts="64" />
                  <test-case name="Spring.Collections.PriorityQueueTests.CreateUnboundedQueue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Element" executed="True" result="Success" success="True" time="0.000" asserts="43" />
                  <test-case name="Spring.Collections.PriorityQueueTests.IsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Iterator" executed="True" result="Success" success="True" time="0.000" asserts="44" />
                  <test-case name="Spring.Collections.PriorityQueueTests.OfferNonComparable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.OfferWithComparableElements" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.PriorityQueueTests.OfferWithNullObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.PartialQueueCopyToArrayWithValidSize" executed="True" result="Success" success="True" time="0.000" asserts="43" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Peek" executed="True" result="Success" success="True" time="0.000" asserts="64" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Poll" executed="True" result="Success" success="True" time="0.000" asserts="44" />
                  <test-case name="Spring.Collections.PriorityQueueTests.QueueCopyToArrayWithIndexOutOfDestinationArrayRange" executed="True" result="Success" success="True" time="0.000" asserts="23" />
                  <test-case name="Spring.Collections.PriorityQueueTests.QueueCopyToArrayWithSmallerDestinationArray" executed="True" result="Success" success="True" time="0.000" asserts="23" />
                  <test-case name="Spring.Collections.PriorityQueueTests.QueueCopyToArrayWithValidSizeButInvalidStartingIndex" executed="True" result="Success" success="True" time="0.000" asserts="23" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="43" />
                  <test-case name="Spring.Collections.PriorityQueueTests.RemoveAll" executed="True" result="Success" success="True" time="0.016" asserts="893" />
                  <test-case name="Spring.Collections.PriorityQueueTests.RemoveElement" executed="True" result="Success" success="True" time="0.000" asserts="54" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Serialization" executed="True" result="Success" success="True" time="0.000" asserts="44" />
                  <test-case name="Spring.Collections.PriorityQueueTests.Size" executed="True" result="Success" success="True" time="0.000" asserts="63" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ThrowsArgumentExceptionForZeroCapacity" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ThrowsArgumentNullExceptionForNullCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ThrowsArgumentNullExceptionForNullCollectionElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ThrowsArgumentNullExceptionForSomeNullCollectionElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ToArrayNonObject" executed="True" result="Success" success="True" time="0.000" asserts="43" />
                  <test-case name="Spring.Collections.PriorityQueueTests.ToArrayObject" executed="True" result="Success" success="True" time="0.000" asserts="43" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SortedSetTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.SortedSetTests.IsOrdered" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Add" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.AddAll" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.AddAllDuplicated" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.AddDuplicate" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.AddNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Clear" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.ContainsAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.CopiesNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.EnumeratesNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.ExclusiveOr" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Intersect" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.IsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Minus" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.RemoveAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.RemoveNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.RetainAll" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.SortedSetTests.SetTests.Union" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="StaticSetTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Collections.StaticSetTests.Intersect" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                  <test-case name="Spring.Collections.StaticSetTests.Minus" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                  <test-case name="Spring.Collections.StaticSetTests.Union" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                  <test-case name="Spring.Collections.StaticSetTests.Xor" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SynchronizedHashtableTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Collections.SynchronizedHashtableTests.BehavesLikeHashtable" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Collections.SynchronizedHashtableTests.DefaultsToCaseSensitive" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Collections.SynchronizedHashtableTests.IgnoreCaseIgnoresCase" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.SynchronizedHashtableTests.InitializeFromOtherCopiesValues" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Collections.SynchronizedHashtableTests.WrapKeepsOriginalHashtableReference" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Context" executed="True" result="Success" success="True" time="2.313" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ApplicationEventArgsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Context.ApplicationEventArgsTests.ArgsMilliTimestamp" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Context.ApplicationEventArgsTests.ArgsTimeStamp" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ContextExceptionTests" executed="True" result="Success" success="True" time="0.078" asserts="0">
                <results>
                  <test-case name="Spring.Context.ContextExceptionTests.ExceptionsTest.TestStandardsCompliance" executed="True" result="Success" success="True" time="0.063" asserts="931" />
                  <test-case name="Spring.Context.ContextExceptionTests.ExceptionsTest.TestThisTest" executed="True" result="Success" success="True" time="0.016" asserts="93" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="EventListenerAttributeTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Context.EventListenerAttributeTests.ReadEventListenerAttribute" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Events" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ConsoleListenerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Events.ConsoleListenerTests.ConsoleOnApplicationEvent" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Support" executed="True" result="Success" success="True" time="2.172" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="AbstractApplicationContextTests" executed="True" result="Success" success="True" time="0.781" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ContextAwarePrototypeGetName" executed="True" result="Success" success="True" time="0.063" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ContextAwarePrototypeWasCalledBack" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ContextAwareSingletonGetName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ContextAwareSingletonWasCalledBack" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.DefaultObjectFactoryProcessorsDontGetAddedTwice" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.DoesNotSearchParentContextForEventRegistry" executed="True" result="Success" success="True" time="0.063" asserts="2" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.DoesNotSearchParentContextForMessageSource" executed="True" result="Success" success="True" time="0.031" asserts="3" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ExecutesAllContextEventHandlersAndRethrowsExceptionsThrownDuringContextEventHandlingByDefault" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.InvalidEventRegistryObject" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.InvalidMessageSourceObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.OrderOfKnownProcessorInstantiation" executed="True" result="Success" success="True" time="0.031" asserts="17" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.OrderOfKnownProcessorInterfaces" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ParentNotNullGrandparentNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ParentNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractApplicationContextTests.ThrowsCannotLoadObjectTypeExceptionOnInvalidTypename" executed="True" result="Success" success="True" time="0.563" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="AbstractMessageSourceTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageNoValidMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageNullCode" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageParentMessageSource" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageResolvableDefaultMessage" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageResolvableNoValidMessage" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageResolvableReturnsFirstCode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageResolvableValidMessageAndCode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageResolvableValidMessageAndCodeNullCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageResolvableValidMessageAndCodNullMessageFormat" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageUseDefaultCode" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageValidMessageAndCode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageValidMessageAndCodeNullCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetMessageWithResolvableArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetResolvableDefaultsToParentMessageSource" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.AbstractMessageSourceTests.GetResolvableNullCodes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ApplicationContextAwareProcessorTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.AfterInitReturnsSameInstanceAsWasPassedIn" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.AlwaysIgnoresProxiedApplicationContextAwareAwareObjects" executed="True" result="Success" success="True" time="0.063" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.AlwaysIgnoresProxiedMessageSourceAwareObjects" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.AlwaysIgnoresProxiedResourceLoaderAwareObjects" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.AttachContext" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.AttachResourceLoader" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.DoNotAttachContextForRegularObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationContextAwareProcessorTests.DoNotAttachResourceLoaderForRegularObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ApplicationContextExtensionTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ApplicationContextExtensionTests.UsingCustomParsers" executed="True" result="Success" success="True" time="0.094" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ApplicationObjectSupportTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ApplicationObjectSupportTests.InvalidContextSubclass" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.ApplicationObjectSupportTests.ReinitWithDiffContext" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.ApplicationObjectSupportTests.ReinitWithSameContext" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationObjectSupportTests.ValidContextIApplicationContext" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ApplicationObjectSupportTests.ValidContextSubClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ApplicationObjectSupportTests.ValidContextSubClassOfAContext" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ContextHandlerTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ContextHandlerTests.ChokesIfChildContextsUseTheSameName" description="SPRNET-105" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.ContextNotOfCorrectType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.CreateChildContextFailure" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.CreateContextSuccessful" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.CreatedFromNullXmlElement" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.CreateRootContextFailure" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.DefaultsToXmlApplicationContextType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ContextHandlerTests.LoadParentChildContextsHierarchy" executed="True" result="Success" success="True" time="0.016" asserts="16" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ContextRegistryTests" executed="True" result="Success" success="True" time="0.125" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ContextRegistryTests.ChokesIfChildContextRegisteredUnderNameOfAnExistingContext" description="SPRNET-105" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.ClearWithConfigurationSection" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.ClearWithDynamicProxies" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.GetContextByNameNotRegisteredThrowsException" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.GetContextWithEmptyName" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.GetContextWithNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.GetRootContextNotRegisteredThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.RegisterNamedContext" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.RegisterNamedRootContext" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.RegisterRootContext" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.RemovesContextFromRegistryWhenContextCloses" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests.ThrowsInvalidOperationExceptionOnRecursiveCallsToGetContext" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ContextRegistryTests+WhenHierarchicalContextsAllHaveDefaultNames" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ContextRegistryTests+WhenHierarchicalContextsAllHaveDefaultNames.RegisterContext_ConstructsNestedPathBasedNames_IfRegisterdInHierarchicalOrder" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Context.Support.ContextRegistryTests+WhenHierarchicalContextsAllHaveDefaultNames.RegisterContext_ConstructsNestedPathBasedNames_IfRegisteringAMixOfDefaultAndExplicitNamedContexts" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DefaultMessageSourceResolvableTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.DefaultMessageSourceResolvableTests.DefaultResolvableFromExistingResolvable" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Context.Support.DefaultMessageSourceResolvableTests.InstantiationWithASingleCodeDefaultsToEmptyDefaultMessage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DefaultMessageSourceResolvableTests.LastCode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DefaultMessageSourceResolvableTests.NullLastCode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DefaultMessageSourceResolvableTests.ResolvableToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DefaultMessageSourceResolvableTests.ResolvableToStringNullArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DelegatingMessageSourceTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.ApplyResources" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.ApplyResourcesWithNoParentMessageSource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageNoDelegateTarget" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithCultureAndParams" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithCultureAndParamsNoDelegateTarget" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithCultureNoDelegateTarget" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithMessageSourceResolvableAndCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithNoParentMessageSourceAndMessageSourceResolvableAndCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithNoParentMessageSourceAndNullDefaultMessageSourceResolvableAndCulture" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithNoParentMessageSourceAndNullDefaultMessageSourceResolvableWithNoCodesAndCulture" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithParams" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetMessageWithParamsNoDelegateTarget" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetResourceObject" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetResourceObjectWithCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetResourceObjectWithNoParentMessageSource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.GetResourceObjectWithNoParentMessageSourceWithCulture" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.DelegatingMessageSourceTests.InstantiationWithSuppliedParentMessageSource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="MessageSourceAccessorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageCodeArgs" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageCodeArgsDefaultsToCurrentUICulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageCodeCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageCodeCultureArgs" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageCodeDefaultsToCurrentUICulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageResolvableCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.MessageSourceAccessorTests.GetMessageResolvableDefaultsToCurrentUICulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="NamespaceParsersSectionHandlerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.NamespaceParsersSectionHandlerTests.ParseSectionSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.NamespaceParsersSectionHandlerTests.ParseSectionWithBadTypeForHandler" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.NamespaceParsersSectionHandlerTests.ParseSectionWithEmptyType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.NamespaceParsersSectionHandlerTests.ParseSectionWithHandlerThatDoesNotImplement_IXmlObjectDefinitionParser" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.NamespaceParsersSectionHandlerTests.ParseSectionWithNoChildParserNamespaceElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.NamespaceParsersSectionHandlerTests.WithParserElementThatIsMissingTheTypeAttribute" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="NullMessageSourceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.NullMessageSourceTests.ApplyResourcesDoesNothing" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.NullMessageSourceTests.CanonicalInstanceIsNotNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.NullMessageSourceTests.ResolveMessageSpitsbackWhatItWasGiven" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.NullMessageSourceTests.ResolveObjectReturnsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ResourceSetMessageSourceTests" executed="True" result="Success" success="True" time="0.578" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.ApplyResources" executed="True" result="Success" success="True" time="0.141" asserts="2" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.GetNullResourceIn2PointOh" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[See SPRNET-246]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.GetResource" executed="True" result="Success" success="True" time="0.063" asserts="5" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.MessageAccessFallbackTurnedOff" executed="True" result="Success" success="True" time="0.109" asserts="25" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.MessageAccessFallbackTurnedOn" executed="True" result="Success" success="True" time="0.047" asserts="26" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.MessageAccessWithParentAndFallbackTurnedOff" executed="True" result="Success" success="True" time="0.047" asserts="25" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.MessageResolveableGetMessage" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.ResourceSetMessageSourceCachedMessage" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.ResourceSetMessageSourceGetMessage" executed="True" result="Success" success="True" time="0.047" asserts="11" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.ResourceSetMessageSourceGetNonExistantResource" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.ResourceSetMessageSourceToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.SimpleFormat" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.ResourceSetMessageSourceTests.TwoResourceManagers" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="StaticApplicationContextTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.StaticApplicationContextTests.AddMessageTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.StaticApplicationContextTests.RegisterObjectPrototype" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="StaticMessageSourceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.ApplyResources" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.ApplyResourcesWithNullLookupKey" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.ApplyResourcesWithNullObject" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.GetMessageCode" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.GetMessageDefaultsToCurrentUICulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.GetResourceObjectThatAintPreviouslyBeenAddedDoesntYieldAnything" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.GetResourceObjectWithCode" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.GetResourceObjectWithCodeAndCulture" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.GetResourceObjectWithCodeAssumesCurrentUICulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.StaticMessageSourceTests.StaticMessageSourceToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeAliasesSectionHandlerTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.ParseSectionSunnyDay" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.ParseSectionWithGuffChildParserNamespaceElementsIsAllowed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.ParseSectionWithNoChildParserNamespaceElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithAliasElementThatIsMissingTheNameAttribute" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithAliasElementThatIsMissingTheTypeAttribute" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithEmptyAlias" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithEmptyTypeName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithGenericType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithGenericTypeDefinition" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithNonExistentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithWhitespacedAlias" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.TypeAliasesSectionHandlerTests.WithWhitespacedTypeName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="XmlApplicationContentArgsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.XmlApplicationContentArgsTests.Default_AutoRefresh_isTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.XmlApplicationContentArgsTests.Default_CaseSensitivity_isTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="XmlApplicationContextTests" executed="True" result="Success" success="True" time="0.172" asserts="0">
                    <results>
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.CaseInsensitiveContext" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.ConfigureObject" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.ContextLifeCycle" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.ContextWithInvalidLazyType" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[Need to add Spring.TypeLoadException]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.ContextWithInvalidValueType" executed="True" result="Success" success="True" time="0.031" asserts="2" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.ContextWithPostProcessors" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.FactoryObjectsAreNotInstantiatedBeforeObjectFactoryPostProcessorsAreApplied" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.GenericApplicationContextConstructorTests" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.GenericApplicationContextWithXmlObjectDefinitions" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.GetObjectOnUnknownIdThrowsNoSuchObjectDefinition" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.InnerObjectWithPostProcessing" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.MultipleConfigLocations" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.NoConfigLocation" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.RefreshDisposesExistingObjectFactory_SPRNET479" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.SingleConfigLocation" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Context.Support.XmlApplicationContextTests.SPRNET1231_DoesNotInvokeFactoryMethodDuringObjectFactoryPostProcessing" description="http://jira.springframework.org/browse/SPRNET-1231" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Core" executed="True" result="Success" success="True" time="1.063" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ComposedCriteriaTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Core.ComposedCriteriaTests.IsSatisfiedWithNoCriteria" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ComposedCriteriaTests.SatifiesMyUpperCaseCriteria" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Core.ComposedCriteriaTests.SatifiesTwoCriteria" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ControlFlowFactoryTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Core.ControlFlowFactoryTests.CreateControlFlow" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.CreateControlFlowReturnsDistinctInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.DefaultCflowIsNotUnderSomeArbitraryClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.DefaultCflowIsNotUnderSomeArbitraryToken" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.DefaultCflowIsNotUnderThisTestAndSomeRandomMethodName" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.DefaultCflowUnderThisTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.DefaultCflowUnderThisTestAndTestMethodName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.ControlFlowFactoryTests.DefaultCflowUnderToken" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="IO" executed="True" result="Success" success="True" time="0.375" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="AssemblyResourceTest" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateFromInvalidAssembly" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateInvalidAssemblyResource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeInChildNamespace" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeInChildNamespaceWithoutPrefix" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeInNotStraightParentNamespace" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeInParentNamespace" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeToRoot" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeWhenNotRelative" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateRelativeWithAReferenceToAFileResource" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateValidAssemblyResource" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateWithMalformedResourceName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.CreateWithObsoleteResourceName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.AssemblyResourceTest.TooMuchParentNamespacesAbove" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ConfigSectionResourceTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.ConfigSectionResourceTests.CanCreate" executed="True" result="Success" success="True" time="0.094" asserts="6" />
                      <test-case name="Spring.Core.IO.ConfigSectionResourceTests.ThrowsIoExceptionIfConfigSectionDoesNotExist" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ConfigSectionResourceTests.ThrowsOnNullConfigElement" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ConfigSectionResourceTests.ThrowsOnNullSectionName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ConfigurableResourceLoaderTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.ConfigurableResourceLoaderTests.GetAbsoluteFileSystemResource" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Core.IO.ConfigurableResourceLoaderTests.GetAssemblyResource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.ConfigurableResourceLoaderTests.GetRelativeFileSystemResource" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Core.IO.ConfigurableResourceLoaderTests.GetResourceForNonMappedProtocol" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ConfigurableResourceLoaderTests.GetResourceThatSupportsTheSpecialHomeCharacter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.ConfigurableResourceLoaderTests.GetResourceThatSupportsTheSpecialHomeCharacter_WithLeadingWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="EncodedResourceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.EncodedResourceTests.HashcodeIsCalculatedUsingResourceOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.EncodedResourceTests.OpensReaderWithAutoDetectEncoding" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.IO.EncodedResourceTests.OpensReaderWithDefaults" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.EncodedResourceTests.OpensReaderWithoutAutoDetectEncoding" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="FileSystemResourceTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.CreateRelativeInSameDirectory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.CreateRelativeInSubdirectoryDirectory" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.CreateRelativeWithParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.CreateRelativeWithSuperParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.CreateFileSystemResourceWithPathName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.CreateRelativeFromNonExistentOriginalResource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.CreateRelativeResourceIsEqualToOriginalAfterBouncingUpAndDownTheDirectoryTree" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.CreateRelativeWithEmptyRelativePath" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.CreateRelativeWithNullRelativePath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.FileSystemResourceExists" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.FileSystemResourceGivesOpenedInputStream" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.FileSystemResourceNotExists" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.FileSystemResourceOpenNonExistanceFile" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.FileSystemResourceValidInputStream" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.GetDescription" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.GetURL" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.RelativeResourceFromRoot" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.RelativeResourceFromSubfolder" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.RelativeResourceTooManyBackLevels" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.RelativeResourceWhenNotRelative" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.Resolution_PlainVanilla" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.Resolution_WithSpecialHomeCharacter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.SupportsAndResolvesTheSpecialHomeCharacter_OnlyIfSpecialHomeCharacterIsFirstCharacter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.SupportsAndResolvesTheSpecialHomeCharacter_SunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.FileSystemResourceCommonTests.SupportsAndResolvesTheSpecialHomeCharacter_SunnyDayEvenWithLeadingWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.LeadingProtocolIsNotTreatedRelative" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeLocalFileSystemResourceFromRoot" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeLocalFileSystemResourceFromSubfolder" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeLocalFileSystemResourceWhenNotRelative" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeUncResourceFromRoot" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeUncResourceFromSubfolder" executed="True" result="Success" success="True" time="0.016" asserts="12" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeUncResourceTooManyBackLevels" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.RelativeUncResourceWhenNotRelative" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.Resolution_WithProtocolAndSpecialHomeCharacter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.Resolution_WithProtocolAndSpecialHomeCharacterParentDirectory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.SPRNET_89_SupportUrlEncodedLocationsWithSpaces" description="SPRNET-89" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.FileSystemResourceTests.SupportsSpecialUriCharacter" description="http://opensource.atlassian.com/projects/spring/browse/SPRNET-320" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="InputStreamResourceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.InputStreamResourceTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.IO.InputStreamResourceTests.InstantiationWithNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.InputStreamResourceTests.ReadStreamMultipleTimes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ResourceConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.ResourceConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.ResourceConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.IO.ResourceConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ResourceConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ResourceConverterTests.ConvertFromWithEnvironmentVariableExpansion" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.ResourceConverterTests.DoesNotChokeOnUnresolvableEnvironmentVariableExpansion" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ResourceHandlerRegistryTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.ResourceHandlerRegistryTests.AddProtocolMappingSilentlyOverwritesExistingProtocol" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.IO.ResourceHandlerRegistryTests.WithIResourceHandlerTypeWithNoValidCtor" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ResourceHandlerRegistryTests.WithNonIResourceHandlerType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ResourceHandlerRegistryTests.WithNullIResourceHandlerType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ResourceHandlerRegistryTests.WithNullProtocolName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.ResourceHandlerRegistryTests.WithWhitespacedProtocolName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="StringResourceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.StringResourceTests.AcceptsNullContent" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Core.IO.StringResourceTests.AlwaysExists" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.IO.StringResourceTests.DoesntSupportRelativeResources" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.StringResourceTests.EnsureDefaults" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Core.IO.StringResourceTests.ReturnsCorrectEncodedStream" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="UrlResourceTests" executed="True" result="Success" success="True" time="0.109" asserts="0">
                    <results>
                      <test-case name="Spring.Core.IO.UrlResourceTests.CreateInvalidUrlResource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.CreateUrlResourceWithGivenPath" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.GetDescription" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.GetInvalidFileInfo" executed="True" result="Success" success="True" time="0.063" asserts="0" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.GetInvalidFileInfoWithOddPort" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.GetValidFileInfo" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.GetValidInputStreamForFileProtocol" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.RelativeResourceFromRoot" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.RelativeResourceFromSubfolder" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                      <test-case name="Spring.Core.IO.UrlResourceTests.RelativeResourceTooManyBackLevels" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MethodArgumentsCriteriaTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Core.MethodArgumentsCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodArgumentsCriteriaTests.IsSatisfied" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Core.MethodArgumentsCriteriaTests.IsSatisfiedIsPolymorphic" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodArgumentsCriteriaTests.IsSatisfiedWithNoParametersByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodArgumentsCriteriaTests.IsSatisfiedWithParamsArguments" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MethodGenericArgumentsCountCriteriaTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Core.MethodGenericArgumentsCountCriteriaTests.BailsWhenExpectedGenericArgumentCountSetToLessThanZero" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Core.MethodGenericArgumentsCountCriteriaTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Core.MethodGenericArgumentsCountCriteriaTests.InstantiationBailsWithGenericArgumentCountSetToLessThanZero" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Core.MethodGenericArgumentsCountCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodGenericArgumentsCountCriteriaTests.IsSatisfied" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MethodParametersCountCriteriaTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.BailsWhenExpectedParameterCountSetToLessThanZero" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.InstantiationBailsWithParameterCountSetToLessThanZero" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.IsSatisfiedWithNoParameter" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.IsSatisfiedWithOneParameter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.IsSatisfiedWithParamsParameters" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Core.MethodParametersCountCriteriaTests.IsSatisfiedWithTwoParameters" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MethodParametersCriteriaTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Core.MethodParametersCriteriaTests.IsNotSatisfiedIsPolymorphic" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodParametersCriteriaTests.IsNotSatisfiedWhenOnlyFinalParamMatches" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodParametersCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodParametersCriteriaTests.IsSatisfied" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Core.MethodParametersCriteriaTests.IsSatisfiedWithNoParametersByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodParametersCriteriaTests.IsSatisfiedWithParamsParameters" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MethodReturnTypeCriteriaTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Core.MethodReturnTypeCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodReturnTypeCriteriaTests.IsSatisfied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.MethodReturnTypeCriteriaTests.IsSatisfiedWithVoidByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OrderComparatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Core.OrderComparatorTests.DoesntBailWhenFedNulls" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Core.OrderComparatorTests.OrdersCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="RegularExpressionEventNameCriteriaTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Core.RegularExpressionEventNameCriteriaTests.IsNotSatisfiedWithGarbage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.RegularExpressionEventNameCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.RegularExpressionEventNameCriteriaTests.IsSatisfied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.RegularExpressionEventNameCriteriaTests.IsSatisfiedWithAnythingByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="RegularExpressionMethodNameCriteriaTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Core.RegularExpressionMethodNameCriteriaTests.IsNotSatisfiedWithGarbage" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.RegularExpressionMethodNameCriteriaTests.IsNotSatisfiedWithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.RegularExpressionMethodNameCriteriaTests.IsSatisfied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Core.RegularExpressionMethodNameCriteriaTests.IsSatisfiedWithAnythingByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="TypeConversion" executed="True" result="Success" success="True" time="0.266" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CredentialConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromMalformedString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromStringWithIncorrectDomain" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromStringWithIncorrectPassword" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromStringWithoutDomain" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromStringWithoutPassword" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Core.TypeConversion.CredentialConverterTests.ConvertFromStringWithUsernameOnly" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="CustomNumberConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.BailsOnEmptyStringWhenNotAllowed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.CanConvertFromString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.ConvertFromNonSupportedNumericTypeOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.ConvertFromSupportedNumericType" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.ConvertsEmptyStringToZeroWhenAllowed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.CustomNumberConverterTests.InstantiationWithNonPrimitiveType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="FileInfoConverterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.FileInfoConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.FileInfoConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.FileInfoConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.FileInfoConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.FileInfoConverterTests.FileConverter" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="NameValueConverterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.NameValueConverterTests.CanConvertFromString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.NameValueConverterTests.CanConvertOnlyFromString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.NameValueConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Core.TypeConversion.NameValueConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.NameValueConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RegexConverterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.RegexConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.RegexConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RegexConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RegistryKeyConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.RegistryKeyConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.RegistryKeyConverterTests.ConvertFromBadHiveString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RegistryKeyConverterTests.ConvertFromBadKeyString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RegistryKeyConverterTests.ConvertFromEmptyString" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RegistryKeyConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RegistryKeyConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ResourceManagerConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromBad_App_GlobalResources" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromBadAssembly" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromOnlyAssemblyNAme" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromOnlyResourceName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromSingleComma" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.ResourceManagerConverterTests.ConvertFromSingleString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RGBColorConverterTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromARGB" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromCommaSeparatedListWithNotEnoughValues" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromCommaSeparatedListWithOutOfRangeValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromGarbageBails" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RGBColorConverterTests.ConvertFromRGB" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RuntimeTypeConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.RuntimeTypeConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.RuntimeTypeConverterTests.CanConvertTo" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.RuntimeTypeConverterTests.ConvertFromNonSupportedType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.RuntimeTypeConverterTests.ConvertFromString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.RuntimeTypeConverterTests.ConvertToString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.RuntimeTypeConverterTests.ConvertToStringFromNonSupportedType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="StreamConverterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.StreamConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.StreamConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.StreamConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="StringArrayConverterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.ConvertFromPreservesExtraneousWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.CustomListSeparator" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.EmptyListSeparator" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.EnsureCultureListSeparatorIsIgnored" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.NullingTheListSeparatorMakesItRevertToTheDefault" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.StringArrayConverterTests.TooLongListSeparator" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TimeSpanConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.BaseConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromStringMalformed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromStringWithDaySpecifier" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromStringWithHourSpecifier" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromStringWithMilliSecondSpecifier" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromStringWithMinuteSpecifier" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeConversion.TimeSpanConverterTests.ConvertFromStringWithSecondSpecifier" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeConversionUtilsTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.TypeConversionUtilsTests.NullAbleTest" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeConverterRegistryTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.TypeConverterRegistryTests.GetConverterForEnums" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.TypeConverterRegistryTests.GetInternalConverter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.TypeConverterRegistryTests.GetSpringConverter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.TypeConverterRegistryTests.RegisterConverter" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.TypeConverterRegistryTests.RegisterConverterWithNonResolvableType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.TypeConverterRegistryTests.RegisterConverterWithNonTypeConverter" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="UniqueKeyConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.CanConvertFromStringOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.CanConvertToStringOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.ConvertFromReturnsNullIfInputNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.ConvertFromStringOrUniqueKeyOnly" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.ConvertToAndFromAreInSync" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.ConvertToEqualsToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.ConvertToReturnsNullIfInputNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.UniqueKeyConverterTests.ConvertToStringOrUniqueKeyOnly" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="UriConverterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeConversion.UriConverterTests.CanConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.UriConverterTests.ConvertFrom" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeConversion.UriConverterTests.ConvertFromMalformedUriBails" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeConversion.UriConverterTests.ConvertFromNonSupportedOptionBails" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Core.TypeConversion.UriConverterTests.ConvertFromNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="TypeResolution" executed="True" result="Success" success="True" time="0.281" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CachedTypeResolverTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeResolution.CachedTypeResolverTests.InstantiateWithNullTypeResolver" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.CachedTypeResolverTests.ResolveWithNullTypeName" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="GenericTypeResolverTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveAmbiguousGenericTypeWithAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveClrNotationStyleGenericTypeWithAssemblyName" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveGenericArrayType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveGenericArrayTypeWithAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveGenericTypeWithAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveLocalAssemblyGenericType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveLocalAssemblyGenericTypeDefinition" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveLocalAssemblyGenericTypeOpen" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveMalformedGenericType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveNestedGenericTypeWithAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.ResolveNestedQuotedGenericTypeWithAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.LoadTypeFromSystemAssemblySpecifyingOnlyTheAssemblyDisplayName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.LoadTypeFromSystemAssemblySpecifyingTheFullAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.ResolveBadArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.ResolveLocalAssemblyType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.ResolveLocalAssemblyTypeWithFullAssemblyQualifiedName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.ResolveWithNonExistentTypeName" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.GenericTypeResolverTests.TypeResolverTests.ResolveWithPartialAssemblyName" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeAssemblyHolderTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeResolution.TypeAssemblyHolderTests.CanTakeQualifiedGenericType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeResolution.TypeAssemblyHolderTests.CanTakeQualifiedType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeResolution.TypeAssemblyHolderTests.CanTakeUnqualifiedGenericType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeResolution.TypeAssemblyHolderTests.CanTakeUnqualifiedType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeRegistryTests" executed="True" result="Success" success="True" time="0.125" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisteringAnAliasTwiceDoesNotThrowException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisterTypeWithEmptyAliasArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisterTypeWithEmptyTypeStringArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisterTypeWithNullAliasArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisterTypeWithNullTypeArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisterTypeWithWhitespacedAliasArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.RegisterTypeWithWhitespacedTypeStringArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveBool" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveBoolArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveChar" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveCharArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveDate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveDateArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveDecimal" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveDouble" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveDoubleArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveDoubleByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveFloat" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveFloatArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveFloatByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveInt16Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveInt32Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveInt64Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveInteger" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveIntegerByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveIntegerByVBName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveLong" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveLongByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableBool" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableBoolArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableChar" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableCharArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableDecimal" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableDecimalArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableDouble" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableDoubleArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableFloat" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableFloatArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableInt16Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableInt32Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableInt64Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableInteger" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableLong" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableShort" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableUInt16Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableUInt32Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableUInt64Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableUnsignedInteger" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableUnsignedLong" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveNullableUnsignedShort" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveObjectArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveShort" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveShortByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveSingle" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveSingleByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveStringArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveTypeWithEmptyAliasArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveTypeWithNullAliasArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveTypeWithWhitespacedAliasArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUInt16Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUInt32Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUInt64Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUnsignedInteger" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUnsignedIntegerByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUnsignedLong" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUnsignedLongByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUnsignedShort" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveUnsignedShortByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBBool" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBBoolArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBCharArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBDate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBDateArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBDecimal" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBDouble" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBDoubleArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBInt16Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBInt32Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBInt64Array" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBInteger" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBLong" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBObjectArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBShort" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBSingleArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ResolveVBStringArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.ReturnsNullIfNoTypeAliasRegistered" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeRegistryTests.TestAliasResolution" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeResolutionUtilsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.MethodMatch" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.ResolveFromAssemblyQualifiedName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.ResolveFromBadAssemblyQualifiedName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.ResolveFromBadShortName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.ResolveFromShortName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.ResolveInterfaceArrayFromStringArray" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolutionUtilsTests.ResolveInterfaceArrayFromStringArrayWithNonInterfaceTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="TypeResolverTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.LoadTypeFromSystemAssemblySpecifyingOnlyTheAssemblyDisplayName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.LoadTypeFromSystemAssemblySpecifyingTheFullAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.ResolveBadArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.ResolveLocalAssemblyType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.ResolveLocalAssemblyTypeWithFullAssemblyQualifiedName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.ResolveWithNonExistentTypeName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Core.TypeResolution.TypeResolverTests.ResolveWithPartialAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CoreCompilerOptionsTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
            <results>
              <test-case name="Spring.CoreCompilerOptionsTests.CompilerOptionsTests.TestBuildCompliance" executed="True" result="Success" success="True" time="0.000" asserts="0" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CoreExceptionTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
            <results>
              <test-case name="Spring.CoreExceptionTests.ExceptionsTest.TestStandardsCompliance" executed="True" result="Success" success="True" time="0.016" asserts="931" />
              <test-case name="Spring.CoreExceptionTests.ExceptionsTest.TestThisTest" executed="True" result="Success" success="True" time="0.016" asserts="93" />
            </results>
          </test-suite>
          <test-suite type="Namespace" name="DataBinding" executed="True" result="Success" success="True" time="0.078" asserts="0">
            <results>
              <test-suite type="TestFixture" name="BaseBindingManagerTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                <results>
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.BindNullValues" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.BindNullValuesWithFormatter" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.DirectionSourceToTarget" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.DirectionTargetToSource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.HandledTypeConversionExceptionSourceToTarget" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.HandledTypeConversionExceptionTargetToSource" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.UnhandledTypeConversionExceptionSourceToTarget" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.UnhandledTypeConversionExceptionTargetToSource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.WithoutTypeConversion" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                  <test-case name="Spring.DataBinding.BaseBindingManagerTests.WithTypeConversion" executed="True" result="Success" success="True" time="0.016" asserts="11" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SimpleExpressionBindingTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.DataBinding.SimpleExpressionBindingTests.BindToNullable" description="http://jira.springframework.org/browse/SPRNET-996" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.DataBinding.SimpleExpressionBindingTests.WithEmptyMesageId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.DataBinding.SimpleExpressionBindingTests.WithEmptyProviders" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.DataBinding.SimpleExpressionBindingTests.WithNullMesageId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.DataBinding.SimpleExpressionBindingTests.WithNullProviders" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.DataBinding.SimpleExpressionBindingTests.WithWhitespaceMesageId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Expressions" executed="True" result="Success" success="True" time="0.969" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ConstructorNodeTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.ConstructorNodeTests.CanCreateNonPublicInstanceWithNonPublicConstructor" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ConstructorNodeTests.CanCreatePublicInstance" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ConstructorNodeTests.CanCreatePublicInstanceWithNonPublicConstructor" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ExpressionEvaluatorTests" executed="True" result="Success" success="True" time="0.875" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.AllExpressionNodeTypesAreSerializable" executed="True" result="Success" success="True" time="0.094" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.DateTests" description="SPRNET-944" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.ExpressionDateLiteralNodeMaintainsStateAfterSerialization" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.ExpressionEvaluationIsThreadSafe" executed="True" result="Success" success="True" time="0.078" asserts="9997" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.ExpressionParserIsThreadSafe" executed="True" result="Success" success="True" time="0.109" asserts="2406" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.ForumTestThread614" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.GetNullOrEmptyExpression" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.MembersDontGetSerializedByDefault" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.NullRoot" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.RootContextChangeTest" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.SetNullOrEmptyExpression" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.SimplePropertyAccessIsCaseInsensitive" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAccessVisibility" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAddOperator" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAddOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestArrayConstructor" executed="True" result="Success" success="True" time="0.000" asserts="41" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAssignNode" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAttribute" executed="True" result="Success" success="True" time="0.031" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAverageAggregator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestAverageAggregatorWithNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestBetweenOperator" executed="True" result="Success" success="True" time="0.016" asserts="10" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestBitwiseAndOperator" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestBitwiseOrOperator" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestBitwiseXOR" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestBooleanLiterals" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestComparisonOfInstancesThatDoNotImplementIComparable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestConstructor" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestConversionProcessor" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestCountAggregator" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestCtorResolutionResolvesToExactMatchOfArgumentTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestCtorResolutionWithParamArray" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestCustomCollectionProcessor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDateLiterals" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDateVariableExpression" description="http://jira.springframework.org/browse/SPRNET-944" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDateVariableExpressionCamelCased" description="http://jira.springframework.org/browse/SPRNET-1155" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDefaultNode" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDelegateFunctionExpressions" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDifferenceOperator" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDifferenceOperatorBad" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDistinctProcessor" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDistinctProcessorWithInvalidArgumentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDistinctProcessorWithInvalidNumberOfArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDivideOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestDivideOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestEqualityOperator" executed="True" result="Success" success="True" time="0.000" asserts="25" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestExpressionList" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestGenericDictionary" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestGreaterThanOperator" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestGreaterThanOrEqualOperator" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestHexLiterals" executed="True" result="Success" success="True" time="0.016" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIndexedPropertyAccess" executed="True" result="Success" success="True" time="0.000" asserts="19" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIndexedPropertyAccessWithInvalidNumberOfIndices" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIndexerResolutionResolvesToExactMatchOfArgumentTypes" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestInheritedMethodInvocation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestInOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestInqualityOperator" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIntersectionOperator" executed="True" result="Success" success="True" time="0.016" asserts="17" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIntersectionOperatorBad" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIntLiterals" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestIsOperator" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLambdaExpressions" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLessThanOperator" executed="True" result="Success" success="True" time="0.016" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLessThanOrEqualOperator" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLikeOperator" executed="True" result="Success" success="True" time="0.031" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLogicalAndOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLogicalNotOperator" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLogicalOperatorPresedance" executed="True" result="Success" success="True" time="0.016" asserts="32" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestLogicalOrOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMatchesOperator" executed="True" result="Success" success="True" time="0.063" asserts="9" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMaxAggregator" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMaxAggregatorWithMixedTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMaxAggregatorWithNonComparable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodAccess" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodArgumentNodesResolveAgainstThisContext" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodEvaluationOnDifferentArgumentTypes" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodEvaluationOnDifferentContextType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodResolutionResolvesToExactMatchOfArgumentTypes" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodResolutionWithNullArguments" description="Test to reproduce SPRNET-462" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMethodResolutionWithParamArray" description="Test to reproduce SPRNET-464" executed="True" result="Success" success="True" time="0.016" asserts="12" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMinAggregator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMinAggregatorWithMixedTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMinAggregatorWithNonComparable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMissingConstructor" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMissingMethodAccess" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMixedAddition" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestModulusOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestModulusOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMultiplyOperator" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestMultiplyOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestNonNullProcessor" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestNullableTypes" description="Test to reproduce SPRNET-408" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestNullLiteral" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestOperatorPrecedence" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestPowerOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestPowerOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestProjection" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestPropertyAccessForTypes" description="Test to reproduce SPRNET-470" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestPropertyGetWithNullInThePath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestPropertySetWithNullInThePath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestQualifiedNameMayContainDotsAndSlashes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestRealLiterals" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestReference" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestReferenceByExpression" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestReferenceForNonExistantObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestReverseProcessor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSelection" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSetEnumTypePropertyOrFieldFromNumeric" executed="True" result="Success" success="True" time="0.016" asserts="18" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSetValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestShadowedPropertyAccess" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSimplePropertyAccess" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSortProcessor" executed="True" result="Success" success="True" time="0.016" asserts="8" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSortProcessorWithSimpleICollectionType" description="sort supports any ICollection containing elements of uniform type" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestStaticInheritedMethodInvocation" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestStringLiterals" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSubtractOperator" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSubtractOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSumAggregator" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestSumAggregatorWithNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTernaryNode" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeCoercionForUncoercableTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeNode" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeNodeWithAliasedGenericArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeNodeWithArrays" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeNodeWithAssemblyQualifiedName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeNodeWithGenericAssemblyQualifiedArrayName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeNodeWithGenericAssemblyQualifiedName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestTypeSet" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestUnaryMinusOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestUnaryPlusOperatorWithInvalidArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestUnicode" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestUnionOperator" executed="True" result="Success" success="True" time="0.000" asserts="17" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestUnionOperatorBad" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestVariableNode" executed="True" result="Success" success="True" time="0.016" asserts="9" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TestXorOperator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.ThrowsSyntaxErrorException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TryingToSetTheValueOfNonSettableNode" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TryToSetRoot" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Expressions.ExpressionEvaluatorTests.TryToSetThis" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="FunctionNodeTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.FunctionNodeTests.ExecutesDelegate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.FunctionNodeTests.ExecutesLambdaFunction" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MethodNodeTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.MethodNodeTests.CallCustomCollectionProcessor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OpADDTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.OpADDTests.CanAddNumbers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.OpADDTests.CanAddStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OpANDTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.OpANDTests.AndsBooleans" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.OpANDTests.AndsNumbers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.OpANDTests.TestShortcircuitAndOperator" description="SPRNET-1381" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OpORTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.OpORTests.OrsBooleans" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.OpORTests.OrsNumbers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Expressions.OpORTests.TestShortcircuitOrOperator" description="SPRNET-1381" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OpXORTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.OpXORTests.XorsBooleans" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Expressions.OpXORTests.XorsNumbers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Processors" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ConversionProcessorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Expressions.Processors.ConversionProcessorTests.RequiresTypeArgument" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Expressions.Processors.ConversionProcessorTests.ReturnsListAsIsIfNullOrEmpty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Expressions.Processors.ConversionProcessorTests.ReturnsTypedArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Expressions.Processors.ConversionProcessorTests.UsesTypeConverterRegistryForConversion" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="OrderByProcessorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Expressions.Processors.OrderByProcessorTests.OrderByDelegate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Expressions.Processors.OrderByProcessorTests.OrderByExpressionString" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Expressions.Processors.OrderByProcessorTests.OrderByLambdaFunction" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PropertyOrFieldNodeTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.PropertyOrFieldNodeTests.CanSetTransparentProxy" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Expressions.PropertyOrFieldNodeTests.UseMostSpecificOverride" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ReferenceNodeTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.ReferenceNodeTests.DoesntCallContextRegistryForLocalObjectFactoryReferences" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SelectionNodeTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Expressions.SelectionNodeTests.RespectsLimits" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Globalization" executed="True" result="Success" success="True" time="0.250" asserts="0">
            <results>
              <test-suite type="Namespace" name="Formatters" executed="True" result="Success" success="True" time="0.156" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CurrencyFormatterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.FormatNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.FormatNullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.FormatUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.FormatUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.ParseNullOrEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.ParseUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                      <test-case name="Spring.Globalization.Formatters.CurrencyFormatterTests.ParseUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DateTimeFormatterTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.DateTimeFormatterTests.FormatNonDate" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.DateTimeFormatterTests.FormatNullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.DateTimeFormatterTests.FormatUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Globalization.Formatters.DateTimeFormatterTests.ParseNullOrEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.DateTimeFormatterTests.ParseUsingDefaults" executed="True" result="Success" success="True" time="0.016" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="FilteringFormatterTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.FilteringFormatterTests.FiltersOnParseAndFormat" executed="True" result="Success" success="True" time="0.047" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="FloatFormatterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.FloatFormatterTests.FormatNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.FloatFormatterTests.FormatNullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.FloatFormatterTests.FormatUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Globalization.Formatters.FloatFormatterTests.FormatUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Globalization.Formatters.FloatFormatterTests.ParseNullOrEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.FloatFormatterTests.ParseUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="HasTextFilteringFormatterTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.HasTextFilteringFormatterTests.DoesntAffectFormat" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Globalization.Formatters.HasTextFilteringFormatterTests.ReplacesNullAndWhitespacesByDefaultValue" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="IntegerFormatterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.IntegerFormatterTests.FormatNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.IntegerFormatterTests.FormatNullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.IntegerFormatterTests.FormatUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Globalization.Formatters.IntegerFormatterTests.FormatUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.IntegerFormatterTests.ParseNullOrEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.IntegerFormatterTests.ParseUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="NumberFormatterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.FormatNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.FormatNullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.FormatUsingCustomSettings" executed="True" result="Success" success="True" time="0.016" asserts="8" />
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.FormatUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.ParseNullOrEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.ParseUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Globalization.Formatters.NumberFormatterTests.ParseUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PercentFormatterTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.FormatNonNumber" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.FormatNullValue" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.FormatUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.FormatUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.ParseNullOrEmptyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.ParseUsingCustomSettings" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Globalization.Formatters.PercentFormatterTests.ParseUsingDefaults" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Localizers" executed="True" result="Success" success="True" time="0.063" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ResourceSetLocalizerTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Localizers.ResourceSetLocalizerTests.AbstractLocalizerTests.DefaultResolvesUsingCurrentUICulture" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Localizers.ResourceSetLocalizerTests.AbstractLocalizerTests.NullReferenceHandling" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Globalization.Localizers.ResourceSetLocalizerTests.AbstractLocalizerTests.TestInvariantCulture" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Globalization.Localizers.ResourceSetLocalizerTests.AbstractLocalizerTests.TestSerbianCyrillic" executed="True" result="Success" success="True" time="0.031" asserts="5" />
                      <test-case name="Spring.Globalization.Localizers.ResourceSetLocalizerTests.AbstractLocalizerTests.TestSerbianLatin" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                      <test-case name="Spring.Globalization.Localizers.ResourceSetLocalizerTests.DoesNotThrowOnMissingResource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Resolvers" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="DefaultCultureResolverTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Globalization.Resolvers.DefaultCultureResolverTests.DefaultCultureIsNullAfterInitialization" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Globalization.Resolvers.DefaultCultureResolverTests.DefaultCultureIsYieldedForResolveCulture" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Globalization.Resolvers.DefaultCultureResolverTests.NullingDefaultCultureYieldsThreadsCultureForResolveCulture" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Globalization.Resolvers.DefaultCultureResolverTests.ResolveCultureYieldsThreadsCultureAfterInitialization" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Objects" executed="True" result="Success" success="True" time="10.234" asserts="0">
            <results>
              <test-suite type="Namespace" name="Events" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Support" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="EventManipulationUtilsTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Spring.Objects.Events.Support.Tests.EventManipulationUtilsTests.FoundEventHandlers" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventManipulationUtilsTests.FoundNoHandlers" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventManipulationUtilsTests.FoundSomeEventHandlers" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="EventRegistryTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.NoPublishers" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.NoValidEventHandlersOrEventsToSubscribeto" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.PublishAllEvents" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.PublishAllEventsAndSubscribeToSome" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.PublishAllEventsMultipleSubscribers" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.PublishAllEventsMultipleSubscribersAndUnsubscribe" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.PublishAllEventsSubscribeToNamedEvents" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                              <test-case name="Spring.Objects.Events.Support.Tests.EventRegistryTests.RespectsInheritance" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Factory" executed="True" result="Success" success="True" time="9.719" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Attributes" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="RequiredAttributeObjectPostProcessorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessorTests.Reflection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessorTests.WithCustomAttribute" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessorTests.WithOnlyRequiredPropertiesSpecified" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessorTests.WithRequiredPropertyOmitted" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessorTests.WithThreeRequiredPropertiesOmitted" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ConcurrentObjectFactoryTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.ConcurrentObjectFactoryTests.Concurrent" executed="True" result="Success" success="True" time="0.047" asserts="1000" />
                      <test-case name="Spring.Objects.Factory.ConcurrentObjectFactoryTests.SingleThread" executed="True" result="Success" success="True" time="0.016" asserts="200" />
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Config" executed="True" result="Success" success="True" time="1.313" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="AbstractFactoryObjectTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.AbstractFactoryObjectTests.DisposeCallbackIsInvokedOnDispose" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.AbstractFactoryObjectTests.DisposeCallbackIsNotInvokedOnDisposeIfInPrototypeMode" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CommandLineArgsVariableSourceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.CommandLineArgsVariableSourceTests.TestVariablesResolution" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.CommandLineArgsVariableSourceTests.TestVariablesResolutionWithCustomPrefixAndSeparator" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ConfigSectionVariableSourceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ConfigSectionVariableSourceTests.TestVariablesResolutionWithSingleSection" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigSectionVariableSourceTests.TestVariablesResolutionWithTwoSections" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ConfigurableVariableSourceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ConfigurableVariableSourceTests.Basic" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ConfigurationReaderTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.ConfigurationManagerCannotReadFromUrl" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.GetSectionLocalSectionHandler" executed="True" result="Success" success="True" time="0.047" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.GetSectionMachineInheritedSectionHandler" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.GetSectionSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.ReadSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.ReadWithNoConfigSectionSectionDefaultsToNameValueSectionHandler" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.ReadWithNullExistingValuesPassedIn" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.ReadWithOverrideOfPreviouslyExistingValues" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.ReadWithOverrideOfPreviouslyExistingValuesButWithOverrideSwitchedOff" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.ConfigurationReaderTests.TryReadFromNonExistantConfigSection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ConstructorArgumentValuesTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddAllDoesntChokeOnNullArgument" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddAllFromOther" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddGenericArgumentValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddIndexedArgumentValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddNamedArgument" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddNamedArgumentFromAotherCtorArgCollection" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddNamedArgumentWithEmptyStringName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddNamedArgumentWithNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddNamedArgumentWithWhitespaceStringName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.AddRangeOfIndexedArgumentValues" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetArgumentValue" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetArgumentValueIgnoresAlreadyUsedValues" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetGeneric_Untyped_ArgumentValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetGeneric_Untyped_ArgumentValueWithOnlyStronglyTypedValuesInTheCtorValueList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetGenericArgumentValue" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetGenericArgumentValueIgnoresAlreadyUsedValues" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.GetIndexedArgumentValue" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.NamedArgumentsAreCaseInsensitive" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.ConstructorArgumentValuesTests.ValueHolderToStringsNicely" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CustomConverterConfigurerTests" executed="True" result="Success" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.CustomConverterConfigurerTests.DontSupplyAnyCustomConverters" executed="True" result="Success" success="True" time="0.094" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.CustomConverterConfigurerTests.SunnyDayScenario" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.CustomConverterConfigurerTests.UseInvalidKeyForConverterMapKey" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.CustomConverterConfigurerTests.UseNonResolvableTypeForConverterMapKey" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.CustomConverterConfigurerTests.UseNonTypeConverterForConverterMapValue" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DelegateFactoryObjectTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.BadDelegateType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.ChokesIfBothTargetTypeAndTargetObjectSupplied" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.EmptyMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.InstancePrototypeDelegate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.InstanceSingletonDelegate" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.MissingATarget" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.MissingDelegateType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.NullMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.ObjectType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.StaticDelegate" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.StaticDelegateWithInstanceMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateFactoryObjectTests.WhitespacedMethodName" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DelegateObjectFactoryConfigurerIntegrationTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.DelegateObjectFactoryConfigurerIntegrationTests.CanBeUsedToReconfigureAnApplicationContextOnRefresh" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.DelegateObjectFactoryConfigurerIntegrationTests.ExecutesBeforeObjectFactoryPostProcessing" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DictionaryFactoryObjectTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.GetObjectReallyDoesPopulateANewIDictionaryInstanceWithTheElementsOfTheSourceDictionary" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.GetObjectWithoutSupplyingASourceDictionary" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.ObjectTypeReallyIsIDictionary" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.SetTargetDictionaryTypeToAbstractIDictionaryInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.SetTargetDictionaryTypeToDerivedIDictionaryInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.SetTargetDictionaryTypeToNonDictionaryType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryFactoryObjectTests.SetTargetDictionaryTypeToNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DictionaryVariableSourceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.CanEnumerateDictionary" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.CanResolveVariable_RespectsCaseInsensitivity" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.CanResolveVariable_RespectsCaseSensitivity" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Iniitialize_WithStringArray_FillsKeyValuesInPairs" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Iniitialize_WithStringArray_ThrowsException_WhenOddNumberOfStringsProvided" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Initialize_WithCaseSensitiveFlag_AddsCaseSensitiveKeys" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Initialize_WithDictionaryConstructor_AddsCaseInsensitiveKeys" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Initialize_WithDictionaryConstructor_AddsKeys" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Initialize_WithDictionaryConstructorAndCaseSensitiveFlag_AddsCaseSensitiveKeys" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Initialize_WithEmptyConstructor_AddsCaseInsensitiveKeys" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.DictionaryVariableSourceTests.Requesting_KeyNotFound_ThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="EnvironmentVariableSourceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.EnvironmentVariableSourceTests.TestVariablesResolution" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="EventValuesTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.EventValuesTests.CopyEventHandlerValues" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.EventValuesTests.EmptyEventValues" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.EventValuesTests.NullEventHandlerValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.EventValuesTests.OneEventValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.EventValuesTests.TwoEventHandlersForSameEvent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="FieldRetrievingFactoryObjectTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.BailsOnNonExistantField" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.BailsWhenBothTargetTypeAndTargetObjectPropsAreSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.BailsWhenStaticFieldPassedGumpfh" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.InstanceField" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.IsSingleton" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.JustTargetField" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.JustTargetObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.JustTargetType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.NothingSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.OnlyUsesObjectNameForStaticFieldIfTheStaticFieldHasNotBeenSet" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.StaticField" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.StaticFieldIsCaseINsenSiTiVE" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.StaticFieldSystemClass" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.StaticFieldThatAintAssemblyQualifiedShouldStillBeResolved" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.StaticFieldViaClassAndFieldName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.StaticFieldWithWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.FieldRetrievingFactoryObjectTests.UsesObjectNameForStaticField" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ListFactoryObjectTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.GetObjectReallyDoesPopulateANewIListInstanceWithTheElementsOfTheSourceList" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.GetObjectWithoutSupplyingASourceList" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.ObjectTypeReallyIsIList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.SetTargetListTypeToAbstractIListInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.SetTargetListTypeToDerivedIListInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.SetTargetListTypeToNonListType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ListFactoryObjectTests.SetTargetListTypeToNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="LogFactoryObjectTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckAfterPropertiesSetBlowsUpIfNotCorrectlyConfigured" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckAfterPropertiesSetPassesIfCorrectlyConfigured" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckGetObjectReturnsSharedInstance" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckGetObjectWorksWithValidLogName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckInstantiationWithEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckInstantiationWithNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckLogNamePropertyStripsRedundantWhitespaceFromName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckLogNamePropertyWithEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckLogNamePropertyWithNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.CheckThatLogNamePropertyMustBeSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.ItsDefinitelyASingletonYeah" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.LogFactoryObjectTests.ObjectTypePropertyYieldsTheCorrectType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MethodInvokingFactoryObjectTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.AfterPropertiesSetBogusMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.AfterPropertiesSetBogusStaticMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.AfterPropertiesSetMissingMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.AfterPropertiesSetStaticMethodMissingArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.BailsIfTheTargetMethodPropertyAintSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetMisMatchedArgumentTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetNonSingletonNonStatic" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetNonSingletonStatic" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetObjectType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetSingletonNonStatic" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetSingletonStatic" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetSupertypesMatchNumArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.GetSupertypesTooManyArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.InvokeGenericMethod" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.InvokeWithNullArgument" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.InvokingAMethodThatHasAVoidReturnTypeReturnsNullPlaceHolder" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.MethodInvokingFactoryObjectTests.ObjectTypeIsNullIfAfterPropertiesSetHasNotYetBeenInvoked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectDefinitionVisitorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.BadConstructorCall" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.VisitManagedDictionary" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.VisitManagedList" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.VisitManagedSet" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.VisitNameValueCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.VisitObjectTypeName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectDefinitionVisitorTests.VisitPropertyValues" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectFactoryCreatingFactoryObjectTests" executed="True" result="Success" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ObjectFactoryCreatingFactoryObjectTests.ObjectTypeReallyIsIGenericObjectFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectFactoryCreatingFactoryObjectTests.PrototypeModeWithSingletonTarget" executed="True" result="Success" success="True" time="0.094" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectFactoryCreatingFactoryObjectTests.SunnyDay" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectFactoryCreatingFactoryObjectTests.WithMissingObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectReferenceFactoryObjectTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests.DelegatesThroughToFactoryFor_GetObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests.DelegatesThroughToFactoryFor_IsSingleton" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests.DelegatesThroughToFactoryFor_ObjectType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests.FactoryDoesNotContainTargetObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests.NullTargetObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests.WhitespaceTargetObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PropertyFileVariableSourceTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.PropertyFileVariableSourceTests.TestMissingResourceLocation" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyFileVariableSourceTests.TestVariablesResolutionWithSingleLocation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyFileVariableSourceTests.TestVariablesResolutionWithTwoLocations" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PropertyOverrideConfigurerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.AddPropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.MalformedOverrideKey" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.MissingObjectDefinitionDoesntRaiseFatalException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.OverridePropertyExpression" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.OverridePropertyReference" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.OverridePropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyOverrideConfigurerTests.ViaXML" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PropertyPathFactoryObjectTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_MakeSureLeadingAndTrailingWhitspaceIsTrimmed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_PropertyPathEvaluatesToNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_ViaObjectName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_ViaObjectNameThatStartsWithAPeriod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_ViaObjectNameWithNestedPropertyPath" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_ViaObjectNameWithNullInNestedPropertyPath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_ViaTargetObjectName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests.GetObject_ViaTargetObjectNameWithNestedPropertyPath" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PropertyPlaceholderConfigurerTests" executed="True" result="Success" success="True" time="0.219" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.ChokesOnBadResourceLocationIfIgnoreBadResourcesFlagNotSetToTrue" executed="True" result="Success" success="True" time="0.047" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.ChokesOnCircularReferenceToPlaceHolder" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.DoesNotChokeOnBadResourceLocationIfIgnoreBadResourcesFlagSetToTrue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.MismatchBetweenNumberOfConfigNamesAndNumberOfLocations" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.OneConfigNameIsOKForLotsOfLocations" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.ReplacesNamedCtorArgument" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.SunnyDay" executed="True" result="Success" success="True" time="0.016" asserts="19" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.UsingCustomMarkers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.ViaXML" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.ViaXMLAndConfigSection" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithAppConfigResolution" executed="True" result="Success" success="True" time="0.063" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithAppend" description="SPRNET-55" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithCircularReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithDefaultProperties" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithEnvironmentPropertyNotUsed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithEnvironmentVariableFallback" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithExpressionProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithIgnoreUnresolvablePlaceholder" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithOverridingEnvironmentProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithTwoLocations" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithTwoLocationsOneSection" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithTypes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithUnresolvableEnvironmentProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurerTests.WithUnresolvablePlaceholder" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PropertyRetrievingFactoryObjectTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsOnNonExistantProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsOnWriteOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenJustTargetObjectIsSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenJustTargetPropertyIsSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenJustTargetTypeIsSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenNotConfigured" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenReadingIndexedPropertyWithNoArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenStaticPropertyIsSetToNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.BailsWhenStaticPropertyPassedGumpfh" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.GetDateTimeDotNowToTestHandlingOfPrototypesIsCorrect" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.IndexedProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.InstanceProperty" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.IsSingleton" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.MixOfNestedIndexedStaticAndInstanceProperty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.NestedInstanceProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.NestedStaticProperty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.ResistsSettingTheArgumentsToNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.StaticProperty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.StaticPropertyCaseINsenSiTiVE" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.StaticPropertyThatAintAssemblyQualifiedShouldStillBeResolved" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.StaticPropertyViaClassAndFieldName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.PropertyRetrievingFactoryObjectTests.SuperMixOfNestedIndexedStaticAndInstanceProperty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegistryVariableSourceTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.RegistryVariableSourceTests.TestVariablesResolution" executed="True" result="Success" success="True" time="0.063" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ResourceHandlerConfigurerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ResourceHandlerConfigurerTests.Serialization" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceHandlerConfigurerTests.SunnyDayScenarioUsingType" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceHandlerConfigurerTests.SunnyDayScenarioUsingTypeString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceHandlerConfigurerTests.UseInvalidTypeForDictionaryValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceHandlerConfigurerTests.UseNonResolvableTypeForDictionaryValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ResourceManagerFactoryObjectTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.ResourceManagerFactoryObjectTests.CreateResourceManager" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceManagerFactoryObjectTests.MissingAssemblyName" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceManagerFactoryObjectTests.MissingBaseName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceManagerFactoryObjectTests.ObjectTypeReallyIsResourceManager" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.ResourceManagerFactoryObjectTests.WithRubbishAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RuntimeObjectReferenceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.RuntimeObjectReferenceTests.InstantiationIsImplictlyNotToParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SetFactoryObjectTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.SetFactoryObjectTests.GetObjectWithoutSupplyingASourceSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.SetFactoryObjectTests.ObjectTypeReallyIsISet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.SetFactoryObjectTests.SetTargetSetTypeToAbstractISetInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.SetFactoryObjectTests.SetTargetSetTypeToDerivedISetInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.SetFactoryObjectTests.SetTargetSetTypeToNonSetType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.SetFactoryObjectTests.SetTargetSetTypeToNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SharedStateAwareProcessorTests" executed="True" result="Success" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.SharedStateAwareProcessorTests.BeforeInitializationIsNoOp" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.SharedStateAwareProcessorTests.DoesNotAllowNullOrEmptyFactoryList" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.SharedStateAwareProcessorTests.IgnoresAlreadyPopulatedState" executed="True" result="Success" success="True" time="0.063" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.SharedStateAwareProcessorTests.ProbesSharedStateFactories" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SpecialFolderVariableSourceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.SpecialFolderVariableSourceTests.TestVariablesResolution" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TypeAliasConfigurerTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.TypeAliasConfigurerTests.Serialization" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypeAliasConfigurerTests.SunnyDayScenarioUsingType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.TypeAliasConfigurerTests.SunnyDayScenarioUsingTypeString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.TypeAliasConfigurerTests.UseInvalidTypeForDictionaryValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypeAliasConfigurerTests.UseNonResolvableTypeForDictionaryValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypeAliasConfigurerTests.WithinApplicationContext" executed="True" result="Success" success="True" time="0.016" asserts="22" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TypedStringValueTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.HasTargetType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.HasTargetTypeReturnsFalseWhenTargetTypeNotResolved" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.InstantiationWithEmptyTypeName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.InstantiationWithNullType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.InstantiationWithNullTypeName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.IsSerializable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.ResolveTargetType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.Serialization" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.SetTargetTypeNamePropertyToEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.TypedStringValueTests.SetTargetTypePropertyToNullType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="VariableAccessorTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.AcceptsNullVariableSource" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetBoolean" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetByte" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetChar" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetDateTime" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetDecimal" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetDouble" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetFloat" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetGuid" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetInt16" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetInt32" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetInt64" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariableAccessorTests.GetStringIgnoresEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="VariablePlaceholderConfigurerTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.BailsOnUnresolvableVariable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.ChainedResolution" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.ChainedResolutionWithNullValues" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.IgnoresUnresolvableVariable" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.MultiResolution" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.NestedResolution" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.SunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.ThrowsOnInvalidVariableSourcesElement" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.ThrowsOnMissingVariableSources" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.UsesCustomVariablePrefixSuffix" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests.WhitespaceHandling" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DefaultListableObjectFactoryPerfTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryPerfTests.ConcurrencyTest" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryPerfTests.Test" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DefaultListableObjectFactoryTests" executed="True" result="Success" success="True" time="0.422" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ApplyPropertyValues" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ApplyPropertyValuesWithIncompleteDefinition" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireByTypeHonoresOverridesBeforeThrowingUnsatisfiedDependencyException" description="http://jira.springframework.org/browse/SPRNET-985" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireByTypeWithInvalidAutowireMode" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireConstructor" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireConstructorHonoresOverridesBeforeThrowingUnsatisfiedDependencyException" description="http://jira.springframework.org/browse/SPRNET-985" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireExistingObjectByName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireExistingObjectByNameWithDependencyCheck" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireExistingObjectByNameWithNoDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireExistingObjectByType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireExistingObjectByTypeWithDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireExistingObjectByTypeWithNoDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByNameIsNotCaseInsensitive" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByNameWithDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByNameWithNoDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByTypeWithDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireObjectByTypeWithNoDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireWithNoDependencies" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireWithSatisfiedConstructorDependency" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireWithSatisfiedObjectDependency" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.AutowireWithUnsatisfiedConstructorDependency" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CanSetPropertyThatUsesNewModifierOnDerivedClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CanSetPropertyThatUsesOddNewModifierOnDerivedClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ChildReferencesParentByAnAliasOfTheParent" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CircularDependencyIsCorrectlyDetected" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigurableFactoryObjectInline" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigurableFactoryObjectReference" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObject" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectAppliesObjectPostProcessorsUsingDefinition" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectDoesNotApplyObjectPostProcessorsIfNoDefinition" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectReturnsOriginalInstanceIfNoDefinitionFound" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectViaEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectViaExplicitName" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectViaLoadOfOldWhitespaceName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ConfigureObjectViaNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectDoesAffectContainerManagedSingletons" executed="True" result="Success" success="True" time="0.016" asserts="18" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectDoesNotConfigure" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithAllNamedCtorArguments" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithAllNamedCtorArgumentsIsCaseInsensitive" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithCtorArgsAndCtorAutowiring" description="http://opensource.atlassian.com/projects/spring/browse/SPRNET-368" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithCtorArgsOnPrototype" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithCtorArgsOnPrototypeOutOfOrderArgs" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[Ordering must now be strict when providing array of arguments for ctors]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithCtorArgsOnSingleton" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithCtorArgsOverrided" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithMixOfIndexedAndTwoNamedSameTypeCtorArguments" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithMixOfNamedAndIndexedAndAutowiredCtorArguments" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CreateObjectWithMixOfNamedAndIndexedCtorArguments" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.CustomEditor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.DisposeCyclesThroughAllSingletonsEvenIfTheirDisposeThrowsAnException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.DoubleBooleanAutowire" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.Empty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ExtensiveCircularReference" executed="True" result="Success" success="True" time="0.172" asserts="1000" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectDefinitionResolvesAliases" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectNamesForTypeFindsFactoryObjects" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectPostProcessorCount" executed="True" result="Success" success="True" time="0.031" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectPostProcessorCountDoesntRespectHierarchy" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectWithArgsOnFactoryObject" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectWithCtorArgsAndCtorAutowiring" description="http://opensource.atlassian.com/projects/spring/browse/SPRNET-368" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectWithCtorArgsOnPrototype" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectWithCtorArgsOnPrototypeOutOfOrderArgs" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[Ordering must now be strict when providing array of arguments for ctors]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectWithCtorArgsOnSingleton" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.GetObjectWithCtorArgsOverrided" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.HierarchicalObjectFactoryChildParentResolution" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.IgnoreObjectPostProcessorDuplicates" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.LazyInitialization" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectCreatedViaInstanceFactoryMethodUsesReturnTypeOfFactoryMethodAsTheObjectType" description="http://opensource2.atlassian.com/projects/spring/browse/SPRNET-112" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectCreatedViaInstanceGenericFactoryMethodUsesReturnTypeOfGenericFactoryMethodAsTheObjectType" description="http://opensource2.atlassian.com/projects/spring/browse/SPRNET-112" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectCreatedViaStaticFactoryMethodUsesReturnTypeOfFactoryMethodAsTheObjectType" description="http://jira.springframework.org/browse/SPRNET-112" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectCreatedViaStaticGenericFactoryMethodUsesReturnTypeOfGenericFactoryMethodAsTheObjectType" description="http://opensource2.atlassian.com/projects/spring/browse/SPRNET-112" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectDefinitionCountIsZeroBeforeAnythingIsRegistered" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectDefinitionOverriding" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.ObjectDefinitionOverridingNotAllowed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.PreInstantiateSingletonsMustNotIgnoreObjectsWithUnresolvedObjectTypes" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.PullingObjectWithFactoryMethodAlsoInjectsDependencies" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.RegisterExistingSingletonWithAlreadyBound" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.RegisterExistingSingletonWithAutowire" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.RegisterExistingSingletonWithReference" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.SingletonFactoryObjectMustNotCreatePrototypeOnPreInstantiateSingletonsCall" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.SPR_1011" description="http://opensource.atlassian.com/projects/spring/browse/SPR-1011" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.SPR_1077" description="http://opensource.atlassian.com/projects/spring/browse/SPR-1077" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.SPRNET_130" description="http://opensource.atlassian.com/projects/spring/browse/SPRNET-130" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.StaticInitializationViaDependsOnSingletonMethodInvokingFactoryObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.TestIInstantiationAwareObjectPostProcessorsInterception" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.DefaultListableObjectFactoryTests.TestIInstantiationAwareObjectPostProcessorsPassThrough" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="MethodReplacerTests" executed="True" result="Success" success="True" time="0.078" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.FailOnLookupMethodThatHasArguments" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.FailOnMethodWithVoidReturnType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.FailOnNonVirtualProtectedMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.FailWithLookupMethodOnSealedClass" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.FailWithReplaceMethodOnSealedClass" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.LookupAndReplaceMethod" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.LookupMethodMultiple" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.LookupMethodWithAbstractMethod" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.LookupMethodWithNullMethod" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.LookupMethodWithNullMethodInstantiatedWithCtorArg" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.LookupMethodWithVirtualProtectedMethod" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.SunnyDayReplaceMethod" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.SunnyDayReplaceMethod_WithArgumentAcceptingReplacer" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.SunnyDayReplaceMethod_WithArgumentAcceptingReplacerWithNoOverloadingAndNoTypeFragmentsSpecified" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.SunnyDayReplaceMethod_WithArgumentAcceptingReplacerWithNoTypeFragmentsSpecified" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.SunnyDayReplaceMethod_WithProtectedVirtual" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Factory.MethodReplacerTests.SunnyDayReplaceMethod_WithReplacerThatReturnsVoid" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="NoSuchObjectDefinitionExceptionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.NoSuchObjectDefinitionExceptionTests.SerializesObjectNameFieldCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.NoSuchObjectDefinitionExceptionTests.SerializesObjectTypeFieldCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ObjectDefinitionStoreExceptionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.ObjectDefinitionStoreExceptionTests.FromNullResource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectDefinitionStoreExceptionTests.FromResource" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectDefinitionStoreExceptionTests.SerializesAllState" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectDefinitionStoreExceptionTests.SerializesWithJustExceptionMessage" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectDefinitionStoreExceptionTests.SerializesWithNoState" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ObjectFactoryUtilsTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.CountObjectsIncludingAncestors" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.CountObjectsIncludingAncestorsWithNonHierarchicalFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.HierarchicalResolutionWithOverride" executed="True" result="Success" success="True" time="0.016" asserts="21" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.IsFactoryDereferenceSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.IsFactoryDereferenceWithEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.IsFactoryDereferenceWithJustTheFactoryObjectPrefixCharacter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.IsFactoryDereferenceWithNonFactoryObjectName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.IsFactoryDereferenceWithNullName" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.NoObjectsOfTypeIncludingAncestors" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectNamesForTypeIncludingAncestors" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectNamesForTypeIncludingAncestorsExcludesObjectsFromParentWhenLocalObjectDefined" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectNamesForTypeIncludingAncestorsPreserveOrderOfRegistration" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectNamesForTypeIncludingAncestorsPrototypesAndFactoryObjectsPreserveOrderOfRegistration" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectNamesIncludingAncestors" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectNamesIncludingAncestorsPreserveOrderOfRegistration" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectOfTypeIncludingAncestorsExcludesObjectsFromParentWhenLocalObjectDefined" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectOfTypeIncludingAncestorsWithMoreThanOneObjectOfType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Objects.Factory.ObjectFactoryUtilsTests.ObjectsOfTypeIncludingAncestorsWithStaticFactory" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="SPRNET_1315" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentAndChildArePrototypes_ConstructorInjection_DoesNotEnforceDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentAndChildArePrototypes_ConstructorInjection_EnforcesConstructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentAndChildArePrototypes_DependsOn_DoesNotEnforceDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentAndChildArePrototypes_DependsOn_EnforcesConstructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentAndChildAreSingletons_ConstructorInjection_EnforcesDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentAndChildAreSingletons_DependsOn_EnforcesDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentIsProttpyeAndChildIsSingleton_ConstructorInjection_DoesNotEnforcesDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentIsSingletonAndChildIsPrototype_ConstructorInjection_DoesNotEnforcesDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Factory.SPRNET_1315.When_ParentIsSingletonAndChildIsPrototype_DependsOn_EnforcesDestructionOrder" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="SPRNET_1334" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.SPRNET_1334.CanDisposeFactoryWhenDependentObjectCallsFactoryInDispose" executed="True" result="Success" success="True" time="0.016" asserts="1">
                        <reason>
                          <message><![CDATA[Test concluded successfully.]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="SPRNET_1338" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Factory.SPRNET_1338.CanAvoidLockContentionDuringObjectFactoryDisposal" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[Test fails -- waiting for verification re: if bug exists in Java impl]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Objects.Factory.SPRNET_1338.CanAvoidLockContentionDuringObjectInstantiation" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Support" executed="True" result="Success" success="True" time="0.531" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="AutowireUtilsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightForZeroArgCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWhenPassingDerivedTypeArgsToBaseTypeCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWhenPassingExactTypeMatch" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWithAllNulls" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWithMismatchedLengths" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[Investigate details of new type weight algorithm]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWithNullArgumentTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWithNullParameterTypes" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.GetTypeDifferenceWeightWithSameTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.SortCtorsBailsSilentlyWhenGivenNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.SortCtorsReallyDoesFavourPublicOnes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.SortCtorsReallyIsGreedy" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.UsingTypeDifferenceWeightPicksMostGenericCtorWhenGivenA_NULL_Argument" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.UsingTypeDifferenceWeightPicksMostSpecificCtor" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Support.AutowireUtilsTests.UsingTypeDifferenceWeightPicksNothingWhenGivenAnIncompatibleArgument" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ChildObjectDefinitionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ChildObjectDefinitionTests.ChokesIfParentNamePropertyIsEmptyAtValidationTime" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ChildObjectDefinitionTests.ChokesIfParentNamePropertyIsJustWhitespaceAtValidationTime" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ChildObjectDefinitionTests.ChokesIfParentNamePropertyIsNullAtValidationTime" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ChildObjectDefinitionTests.Ctor_ParentNameOnly" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DefaultObjectDefinitionFactoryTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.DefaultObjectDefinitionFactoryTests.CreateChildDefinition" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.DefaultObjectDefinitionFactoryTests.CreateRootDefinition" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.DefaultObjectDefinitionFactoryTests.DoesNotResolveTypeNameToFullTypeInstanceIfAppDomainIsNull" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DelegatingMethodReplacerTests" executed="True" result="Success" success="True" time="0.219" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.DelegatingMethodReplacerTests.InstantiationWithNullDefinition" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.DelegatingMethodReplacerTests.InstantiationWithNullFactory" executed="True" result="Success" success="True" time="0.188" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.DelegatingMethodReplacerTests.SunnyDayPath" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="LookupMethodOverrideTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.InstantiationWithEmptyMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.InstantiationWithEmptyMethodReplacerObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.InstantiationWithNullMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.InstantiationWithNullMethodReplacerObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.InstantiationWithWhitespacedMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.InstantiationWithWhitespacedMethodReplacerObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.Matches_MatchingMethodName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.Matches_TotallyDifferentMethodName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.MatchesWithNullMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodOverrideTests.ToStringWorks" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="LookupMethodReplacerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodReplacerTests.InstantiationWithNullDefinition" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodReplacerTests.InstantiationWithNullFactory" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.LookupMethodReplacerTests.SunnyDayPath" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ManagedDictionaryTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.MergeChildValueOverrideTheParents" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.MergeEmptyChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.MergeNotAllowedWhenMergeNotEnabled" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.MergeSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.MergeWithNonCompatibleParentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.MergeWithNullParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.ResolvesGenericTypeNames" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedDictionaryTests.ResolvesInternalGenericTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ManagedListTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ManagedListTests.MergeChildValueOverrideTheParents" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedListTests.MergeEmptyChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedListTests.MergeNotAllowedWhenMergeNotEnabled" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedListTests.MergeSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedListTests.MergeWithNonCompatibleParentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedListTests.MergeWithNullParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ManagedNameValueCollectionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ManagedNameValueCollectionTests.MergeChildValueOverrideTheParents" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedNameValueCollectionTests.MergeEmptyChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedNameValueCollectionTests.MergeNotAllowedWhenMergeNotEnabled" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedNameValueCollectionTests.MergeSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedNameValueCollectionTests.MergeWithNonCompatibleParentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedNameValueCollectionTests.MergeWithNullParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ManagedSetTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ManagedSetTests.MergeChildValueOverrideTheParents" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedSetTests.MergeEmptyChild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedSetTests.MergeNotAllowedWhenMergeNotEnabled" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedSetTests.MergeSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedSetTests.MergeWithNonCompatibleParentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ManagedSetTests.MergeWithNullParent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectDefinitionBuilderTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.ObjectName" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.ObjectNameChild" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.ObjectNameWithFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.ObjectType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.ObjectTypeWithFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.ObjectTypeWithSimpleProperty" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests.Simple" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectDefinitionReaderUtilsTests" executed="True" result="Success" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.GenerateObjectNameWithNullDefinition" executed="True" result="Success" success="True" time="0.109" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.GenerateObjectNameWithNullRegistry" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.RegisterObjectDefinitionSunnyDay" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.RegisterObjectDefinitionSunnyDayWithAliases" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.RegisterObjectDefinitionWithAllArgumentsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.RegisterObjectDefinitionWithDuplicateAlias" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.RegisterObjectDefinitionWithNullDefinition" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ObjectDefinitionReaderUtilsTests.RegisterObjectDefinitionWithNullRegistry" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ReplacedMethodOverrideTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.AddEmptyTypeIdentifier" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.AddNullTypeIdentifier" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.AddWhitespacedTypeIdentifier" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.InstantiationWithEmptyMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.InstantiationWithEmptyMethodReplacerObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.InstantiationWithNullMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.InstantiationWithNullMethodReplacerObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.InstantiationWithWhitespacedMethodName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.InstantiationWithWhitespacedMethodReplacerObjectName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_AllTypeIdentifiers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_MatchingMethodNameNoOverload" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_MatchingMethodNameWithOverload" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_MatchingMethodNameWithOverloadAndBadTypeIdentifiers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_MatchingMethodNameWithOverloadAndTypeIdentifiers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_RequiresAllTypeIdentifiers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.Matches_TotallyDifferentMethodName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.MatchesWithNullMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Support.ReplacedMethodOverrideTests.ToStringWorks" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RootObjectDefinitionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.RootObjectDefinitionTests.InstantiationFromOther" executed="True" result="Success" success="True" time="0.000" asserts="15" />
                          <test-case name="Spring.Objects.Factory.Support.RootObjectDefinitionTests.InstantiationWithClassName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Support.RootObjectDefinitionTests.InstantiationWithNullCtorArgsAndNullPropsDoesNotResultInNullPropertyValues" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.RootObjectDefinitionTests.OverrideFromOther" executed="True" result="Success" success="True" time="0.000" asserts="17" />
                          <test-case name="Spring.Objects.Factory.Support.RootObjectDefinitionTests.ValidateLazyAndPrototypeCausesBail" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SimpleInstantiationStrategyTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Support.SimpleInstantiationStrategyTests.InstantiateWithDefinitionThatDoesNotHaveAResolvedObjectClass" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Support.SimpleInstantiationStrategyTests.InstantiateWithExplicitCtor" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.SimpleInstantiationStrategyTests.InstantiateWithFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.SimpleInstantiationStrategyTests.InstantiateWithNullObjectName" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Support.SimpleInstantiationStrategyTests.InstantiateWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Xml" executed="True" result="Success" success="True" time="7.016" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CollectionMergingGenericTests" description="SPRNET-1242 Support for collection merging with generic collections" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingGenericTests.MergeList" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CollectionMergingTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeDictionary" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeList" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeListInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeListWithInnerObjectAsListElementInConstructor" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeMapInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeMapWithInnerObjectAsMapEntryValue" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeMapWithInnerObjectgAsMapEntryValueInConstructor" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeNameValueCollection" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeNameValueCollectionInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeSet" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeSetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeSetWithInnerObjectAsSetElement" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergeSetWithInnerObjectAsSetElementInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.CollectionMergingTests.MergListWithInnerObjectAsListElement" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="EventWiringTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.EventWiringTests.EventWiringInstanceSinkToPrototypeSource" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[SPRNET-21]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Spring.Objects.Factory.Xml.EventWiringTests.InstanceEventWiring" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.EventWiringTests.SingletonSourcePrototypeSink" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.EventWiringTests.StaticEventWiring" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="LocaleTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.LocaleTests.LocaleTest" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="NamespaceParserRegistryTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.NamespaceParserRegistryTests.CanLoadSchemaImportingOtherSchemaByRelativePath" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectFactorySectionHandlerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.ObjectFactorySectionHandlerTests.CreateFactorySuccessful" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.ObjectFactorySectionHandlerTests.CreateFactoryUnSuccessful" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ObjectNameGenerationTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.ObjectNameGenerationTests.AssignObjectNames" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SiimpleCtorWiringTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.SiimpleCtorWiringTests.SimpleCtor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="XmlListableObjectFactoryTests" executed="True" result="Success" success="True" time="3.531" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractListableObjectFactoryTests.ContainsObjectDefinition" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractListableObjectFactoryTests.Count" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractListableObjectFactoryTests.GetCountForFactoryClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractListableObjectFactoryTests.GetDefinitionsForNoSuchClass" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractListableObjectFactoryTests.ObjectCount" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.AddObjectFactoryOnObjectFactoryAwareObjectPostProcessors" description="SPRNET-1208" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.Aliasing" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.AliasWithEmptyAlias" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.AliasWithEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.CanResolveCyclicSingletonFactoryObjectProductDependencies" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.ContainsSingletonWithEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.ContainsSingletonWithNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.FactoryIsInitialized" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.FactoryPrototype" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.FactorySingleton" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.FindsValidInstance" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetFactoryItself" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetInstanceByMatchingClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetInstanceByNonmatchingClass" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetObjectIsThreadSafe" executed="True" result="Success" success="True" time="3.141" asserts="8" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetObjectWithNullName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetSharedInstanceByMatchingClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetSharedInstanceByMatchingClassNoCatch" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetSharedInstanceByNonmatchingClass" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GetSingletonNamesReflectsOrderOfRegistration" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GrandParentDefinitionFoundInObjectFactory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GrandParentDefinitionFoundInObjectFactoryWithArguments" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GrandParentDefinitionFoundInObjectFactoryWithType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GrandParentDefinitionFoundInObjectFactoryWithTypeAndArguments" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.GrandParentDefinitionFoundInObjectFactoryWithTypeAndArgumentsWithWrongType" description="Extra check that the type is really passed on to the parent factory" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.Inheritance" executed="True" result="Success" success="True" time="0.016" asserts="7" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.InitializingObjectCallback" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.LifecycleCallbacks" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.NotThere" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.RegisterNullCustomTypeConverter" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.RegisterSingletonWithEmptyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.RegisterSingletonWithNullName" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.RejectsFactoryGetOnNormalObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.RespectsCaseInsensitiveNamesAndAliases" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.SharedInstancesAreEqual" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.ThrowsOnCyclicDependenciesOnNonSingletons" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.TypeMismatch" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.AbstractObjectFactoryTests.ValidEmpty" executed="True" result="Success" success="True" time="0.094" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.CountSingletons" executed="True" result="Success" success="True" time="0.047" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.FactoryNesting" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.FactoryReferences" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.ObjectPostProcessor" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlListableObjectFactoryTests.PrototypeReferences" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="XmlObjectCollectionTests" executed="True" result="Success" success="True" time="0.453" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.AddElementsToReadOnlyList" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.AutoAliasing" executed="True" result="Success" success="True" time="0.016" asserts="22" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.BuildCollectionFromMixtureOfReferencesAndValues" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.CanApplyConstructorArgsToAbstractType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.ClassArray" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.CollectionFactoryDefaults" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.CustomListCollection" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.DelimitedProps" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.DictionaryFactory" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.EmptyMap" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.EmptyProps" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.EmptySet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.EmptyValue" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.GetDictionaryThatDoesntSpecifyAnyKeyForAnEntry" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.GetDictionaryThatUsesEntryValueShortcut" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.GetDictionaryThatUsesNonStringKeys" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.GetDictionaryThatUsesStringKeysSpecifiedAsElements" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.GetDictionaryWithKeyRefAttributeShortcuts" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.GetDictionaryWithValueRefAttributeShortcuts" executed="True" result="Success" success="True" time="0.016" asserts="7" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.ListFactory" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.MapWithLiteralsAndPrototypeReferences" executed="True" result="Success" success="True" time="0.016" asserts="8" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.MapWithLiteralsAndReferences" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.MapWithLiteralsOnly" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.MapWithLiteralsReferencesAndList" executed="True" result="Success" success="True" time="0.016" asserts="19" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.ObjectArray" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.ObjectWithIndexerProperty" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.PopulatedProps" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.PopulatedPropsWithSameKey" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.PopulatedSet" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.PrototypeDictionaryFactory" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.PrototypeListFactory" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.PrototypeSetFactory" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.RefSubelementsBuildCollection" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.RefSubelementsBuildCollectionFromSingleElement" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.RefSubelementsBuildCollectionWithPrototypes" executed="True" result="Success" success="True" time="0.016" asserts="10" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.SetFactory" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.TypedGenericDictionary" executed="True" result="Success" success="True" time="0.031" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.TypedGenericList" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.TypedNonGenericDictionary" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectCollectionTests.TypedNonGenericList" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="XmlObjectDefinitionReaderTests" executed="True" result="Success" success="True" time="0.188" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.AutoRegistersAllWellknownNamespaceParsers_3_0" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.AutoRegistersAllWellknownNamespaceParsers_Common" executed="True" result="Success" success="True" time="0.094" asserts="8" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.AutoRegistersWellknownNamespaceParser" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.LoadObjectDefinitionsWithNonExistentResource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.LoadObjectDefinitionsWithNullResource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.ParsesNonDefaultNamespace" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.ParsesObjectAttributes" executed="True" result="Success" success="True" time="0.016" asserts="12" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.ThrowsObjectDefinitionStoreExceptionOnErrorDuringObjectDefinitionRegistration" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.ThrowsObjectDefinitionStoreExceptionOnInvalidXml" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.ThrowsObjectDefinitionStoreExceptionOnValidationError" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.ThrowsOnUnknownNamespaceUri" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.WhitespaceValuesArePreservedForValueAttribute" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.WhitespaceValuesArePreservedForValueElementWhenSpaceIsSetToPreserve" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectDefinitionReaderTests.WhitespaceValuesResultInEmptyStringForValueElement" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="XmlObjectFactoryTests" executed="True" result="Success" success="True" time="2.641" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AbstractParentObjects" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AnObjectCanBeIstantiatedWithANotFullySpecifiedAssemblyName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AnObjectsFileWithNoObjectsIsOk" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.Autowire" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AutowireByConstructor" executed="True" result="Success" success="True" time="0.016" asserts="17" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AutowireByConstructorWithSimpleValues" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AutowireWithCtorArrayArgs" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AutowireWithDefault" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.AutowireWithParent" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.BadParentReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.BailsOnRubbishFieldRetrievingFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.BailsOnRubbishPropertyRetrievingFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.BailsWhenBothNameAndIndexAttributesAreAppliedToASingleCtorArg" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.BogusParentageFromParentFactory" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.CanSpecifyFactoryMethodArgumentsOnFactoryMethodPrototype" executed="True" result="Success" success="True" time="0.016" asserts="9" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ChildDefinitionWithoutIdOrNameOrALiasGetsOneAutogenerated" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ChildOverridesParentObject" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.CircularReferences" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ClassNotFoundWithDefault" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ConstructorArgResolution" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ConstructorArgWithDoubleSimpleTypeMatch" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ConstructorArgWithSimpleTypeMatch" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DefaultLazyInit" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DefaultLazyInitNoInObjectDef" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DefaultXmlResolverIsUsedIfNullSuppliedOrSet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DependenciesMaterializeThis" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DependsOn" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DescriptionButNoProperties" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.DoubleBooleanAutowire" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.EnumProperty" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.FactoryMethodNoMatchingStaticMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.FactoryMethodsOnExternalClass" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.FactoryMethodsPrototypeOnTargetClass" executed="True" result="Success" success="True" time="0.000" asserts="22" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.FactoryMethodsSingletonOnTargetClass" executed="True" result="Success" success="True" time="0.016" asserts="11" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.FactoryObjectDefinedAsPrototype" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.FactoryReferenceCircle" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.GetObjectThatUsesCtorArgRefShortcuts" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.GetObjectThatUsesCtorArgValueShortcuts" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.IfTypeAttributeIsPresentItMustNotBeAnOnlyWhitespaceStringValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.IfTypeAttributeIsPresentItMustNotBeTheEmptyStringValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ImportsExternalResourcesBailsOnNonExistentResource" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ImportsExternalResourcesCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InitializingObjectAndInitMethod" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InitMethodIsInvoked" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InitMethodThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InnerObjects" executed="True" result="Success" success="True" time="0.016" asserts="17" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InnerObjectsInPrototype" executed="True" result="Success" success="True" time="0.000" asserts="19" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InstanceFactoryMethodWithoutArgs" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InstanceFactoryMethodWithOverloadedArgs" description="http://opensource.atlassian.com/projects/spring/browse/SPRNET-492" executed="True" result="Success" success="True" time="0.156" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InstanceFieldRetrievingFactoryMethod" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InstancePropertyRetrievingFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InstantiateObjectViaNamedArgsToInnerMethodInvokingFactoryObject" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.InvalidXmlFile" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.LoadFromConfig" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.LookupMethodIsParsedAndOperatesCorrectly_SunnyDay" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.LookupMethodWithNoMethodNameSpecified" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.LookupMethodWithNoTargetObjectNameSpecified" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.MethodInvokingFactoryObjectRefsObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.MultiThreadedLazyInit" executed="True" result="Success" success="True" time="2.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.NonChildObjectDefinitionWithoutATypeReturnsObjectDefinition" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.NoSuchInitMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.NoSuchXmlFile" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ParsesNamedCtorArgsCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.PropertyInvokingFactoryObjectIsWiredCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.PropertyWithIdRefLocalAttrSubelement" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.PropertyWithIdRefObjectAttrSubelement" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.PropertyWithLiteralValueSubelement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.PrototypeInheritanceFromParentFactoryPrototype" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.PrototypeInheritanceFromParentFactorySingleton" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.RefSubelement" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.RefToSeparatePrototypeInstances" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.RefToSingleton" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.RegisterAliasViaAliasElement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.RegisterAliasViaAliasElementOrderingIsUnimportant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ReplacedMethodWithNoMethodNameSpecified" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ReplacedMethodWithNoReplacerObjectNameSpecified" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ResourceAndInputStream" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SatisfiedAllDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SatisfiedObjectDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SatisfiedSimpleDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SimpleStringObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SingletonInheritanceFromParentFactorySingleton" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SingletonInheritanceFromParentFactorySingletonUsingCtor" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.SingletonInheritsFromParentFactoryPrototype" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.StaticFieldRetrievingFactoryMethod" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.StaticPropertyRetrievingFactoryMethod" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.TestExpressionAttribute" executed="True" result="Success" success="True" time="0.016" asserts="10" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.TestExpressionElement" executed="True" result="Success" success="True" time="0.016" asserts="10" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ThrowsExceptionOnAmbiguousResolution" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ThrowsExceptionOnTooManyArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.TypedStringValueIsPickedUp" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.UnsatisfiedAllDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.UnsatisfiedObjectDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.UnsatisfiedSimpleDependencyCheck" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.UseInstanceFactoryMethodInnerObjectDefinition" description="SPR-1313" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.UseStaticFactoryMethodInnerObjectDefinition" description="SPR-1313" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ValidatesLookupMethodCorrectly" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlObjectFactoryTests.ValidatesReplacedMethodCorrectly" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="XmlParserResolverTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Spring.Objects.Factory.Xml.XmlParserResolverTests.RegisterParserWithBadParserType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlParserResolverTests.RegisterParserWithEmptyNamespaceWithoutDefaultValues" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlParserResolverTests.RegisterParserWithNullNamespaceWithoutDefaultValues" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="Spring.Objects.Factory.Xml.XmlParserResolverTests.RegisterParserWithNullType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MutablePropertyValuesTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.AddAllInList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.AddAllInMap" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.AddAllInNullList" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.AddAllInNullMap" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.ChangesSince" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.ChangesSinceWithSelf" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.Contains" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.InstantiationWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.RemoveByName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.MutablePropertyValuesTests.RemoveByPropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="NotWritablePropertyExceptionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Objects.NotWritablePropertyExceptionTests.InstantiationSupplyingNullPropertyNullTypeAndRootException" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.NotWritablePropertyExceptionTests.InstantiationSupplyingNullPropertyTypeAndRootException" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.NotWritablePropertyExceptionTests.InstantiationSupplyingPropertyTypeAndRootException" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ObjectWrapperTests" executed="True" result="Success" success="True" time="0.156" asserts="0">
                <results>
                  <test-case name="Spring.Objects.ObjectWrapperTests.AllValid" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.AmbiguousPropertyLookupIsHandledProperlyByLookingAtDerivedClassOnly" description="SPRNET-198" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.ArrayToArrayConversion" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.ArrayToStringConversion" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.EmptyPropertyValuesSet" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.EmptyValueForPrimitiveProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetChainedIndexers" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedFromArrayListProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedFromArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedFromDictionaryProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedFromListProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithGuffIndexFromArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithGuffIndexFromListProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithGuffIndexFromSetProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithMissingIndexFromArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithMissingIndexFromListProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithMissingIndexFromSetProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexedPropertyValueWithNonIndexedType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexFromSetProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexMissingFromDictionaryProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexOutofRangeFromArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexOutofRangeFromListProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetIndexOutofRangeFromSetProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetNestedProperty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetNestedPropertyInfo" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetNestedPropertyValueNullValue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPrivatePropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyInfoWithNonParsableExpression" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyInfoWithNonPropertyExpression" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyInfoWithNullArgument" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyTypeFromField_SPRNET502" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyTypeWithEmptyPropertyPath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyTypeWithNestedLookup" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyTypeWithNullPropertyPath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetPropertyTypeWithWhitespacedPropertyPath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetProtectedPropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetSetIndexerProperties" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[]]></message>
                    </reason>
                  </test-case>
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetterThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetValueOfCustomIndexerProperty" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[]]></message>
                    </reason>
                  </test-case>
                  <test-case name="Spring.Objects.ObjectWrapperTests.GetValueOfCustomIndexerPropertyWithMalformedIndexer" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.IndividualAllValid" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.InstantiateWithAbstractType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.InstantiateWithInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.InstantiateWithOkType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.IntArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.NestedProperties" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.NewWrappedInstanceNestedPropertyValuesGet" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.NewWrappedInstancePropertyValuesGet" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.NullObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.ObjectWrapperUpdates" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.PrimitiveArray" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.PrimitiveArrayFromCommaDelimitedString" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetArrayPropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetCultureInfoProperty" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetDateTimeProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetEnumProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedFromArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedFromDictionaryProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedFromListProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedFromListPropertyUsingEmptyValueForTheIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedFromListPropertyUsingMixOfSingleAndDoubleQuotedDelimeters" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedFromListPropertyUsingNonNumericValueForTheIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedPropertyOnListThatsOutOfRange" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedPropertyValueOnNonIndexableType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexedPropertyValueOnUninitializedPath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexOutOfRangeFromArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetIndexOutOfRangeFromListProperty" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[Addition of elements to the list via index that is out of range is not supported anymore.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetNestedProperty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPrimitivePropertyToNullReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPrivatePropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyThatRequiresTypeConversionWithNonConvertibleType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyUsingValueThatNeedsConversionWithNoCustomConverterRegistered" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValueIgnoresCase" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValuesDoesNotFailWhenSettingNonExistantPropertyWithIgnorUnknownSetToTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValuesDoesNotFailWhenSettingReadOnlyPropertyWithIgnorUnknownSetToTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValuesFailsWhenSettingNonExistantProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValuesFailsWhenSettingReadOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetPropertyValuesWithUnknownProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetProtectedPropertyValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SettingADictionaryPropertyJustAddsTheValuesToTheExistingDictionary" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SettingAnInvalidValue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SettingASetPropertyJustAddsTheValuesToTheExistingSet" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetTypePropertyWithString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetURIProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetValueOfCustomIndexerPropertyWithNonReadablePropertyInIndexedPath" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetWrappedInstanceOfDifferentClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.SetWrappedInstanceOfSameClass" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.StringArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.TestToString" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.TryToReadAnIndexedValueFromANullProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.TryToReadTheValueOfAWriteOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.ObjectWrapperTests.TypeMismatch" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PropertyAccessExceptionsExceptionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Objects.PropertyAccessExceptionsExceptionTests.GetNonExistantPropertyException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.PropertyAccessExceptionsExceptionTests.GetPropertyExceptions" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PropertyValueTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Objects.PropertyValueTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Objects.PropertyValueTests.InstantiationWithEmptyStringPropertyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.PropertyValueTests.InstantiationWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.PropertyValueTests.InstantiationWithWhitespacePropertyName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Objects.PropertyValueTests.TestEquals" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Objects.PropertyValueTests.TestToString" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Support" executed="True" result="Success" success="True" time="0.063" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="AbstractSharedStateFactoryTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.AbstractSharedStateFactoryTests.DefaultsToCaseInsensitiveState" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.AbstractSharedStateFactoryTests.ReturnsNullStateIfKeyIsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.AbstractSharedStateFactoryTests.SharedStateCacheIsCaseSensitive" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AbstractSharedStateFactoryTests.StateDictionaryBehavesAccordingToCaseSensitiveState" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AbstractSharedStateFactoryTests.ThrowsOnNullInstance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ArgumentConvertingMethodInvokerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.ArgumentConvertingMethodInvokerTests.Invoke" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.ArgumentConvertingMethodInvokerTests.InvokeAllNamedArgumentsWithConversion" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.ArgumentConvertingMethodInvokerTests.InvokeWithConversion" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.ArgumentConvertingMethodInvokerTests.InvokeWithRegisteredConversion" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="AutoWiringEventHandlerValueTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.AllCompatibleSignaturesAreWired" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.AutowireAllEventsOnSource" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.AutowireAllHandlersWithCompatibleSignatures" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.AutowireExplicitly" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.AutowireExplicitlyWithBadSignatureMethod" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.AutowiringIsCaseInsensitive" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.AutoWiringEventHandlerValueTests.TestDefaultMethodMatching" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ByTypeSharedStateProviderTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                  <test-suite type="TestFixture" name="InstanceEventHandlerValueTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.InstanceEventHandlerValueTests.BailsIfMethodDoesntExist" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Support.InstanceEventHandlerValueTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.InstanceEventHandlerValueTests.Wire" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.InstanceEventHandlerValueTests.WireWithStaticHandler" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="MethodInvokerTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.ArgumentsProperty" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithArgumentOfWrongType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithGenericStaticMethod" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithMixOfNamedAndPlainVanillaArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithMixOfNamedAndPlainVanillaArgumentsOfDifferingTypes" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithNamedArgument" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithNamedArgumentThatDoesNotExist" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithOKArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithOKArgumentsAndMixedCaseMethodName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithStaticMethod" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.InvokeWithWeIRdLyCasedNamedArgument" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.NamedArgumentsOverwriteEachOther" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.PreparedArgumentsIsNeverNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.PrepareWithOnlyTargetMethodSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Support.MethodInvokerTests.SettingNamedArgumentsToNullJustClearsOutAnyNamedArguments" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="MutableSortDefinitionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.MutableSortDefinitionTests.DoesNotTogglesWhenPropertyIsSetAgain" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.MutableSortDefinitionTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.MutableSortDefinitionTests.InstantiationWithCopy" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Support.MutableSortDefinitionTests.PropertySetter" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.MutableSortDefinitionTests.TestEquals" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.MutableSortDefinitionTests.TogglesOkWhenPropertyIsSetAgain" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PropertyComparatorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.CanGetSortDefinition" description="SPRNET-171" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.Compare" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.CompareNestedProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.CompareWithNonExistantProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.CompareWithNullArguments" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.CompareWithNullProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.InstantiationWithNullArgument" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.OrderingIsUnperturbedWithEqualProps" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.Sort" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.SortInDescendingOrder" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.PropertyComparatorTests.SortWithNullDefinition" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="StaticEventHandlerValueTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Objects.Support.StaticEventHandlerValueTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Objects.Support.StaticEventHandlerValueTests.Wire" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Objects.Support.StaticEventHandlerValueTests.WireWithInstanceHandler" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="TypeMismatchExceptionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Objects.TypeMismatchExceptionTests.InstantiationSupplyingNullPropertyChangeArgsAndNullType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.TypeMismatchExceptionTests.InstantiationSupplyingPropertyChangeArgsType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Objects.TypeMismatchExceptionTests.InstantiationSupplyingPropertyChangeArgsTypeAndRootException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Pool" executed="True" result="Success" success="True" time="0.063" asserts="0">
            <results>
              <test-suite type="TestFixture" name="SimplePoolTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                <results>
                  <test-case name="Spring.Pool.SimplePoolTests.ActivateOnObjectOnBorrow" executed="True" result="Success" success="True" time="0.047" asserts="4" />
                  <test-case name="Spring.Pool.SimplePoolTests.DestroyObjectOnClose" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.InstantiateSpecifyingNegativePooledItems" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.InstantiateSpecifyingZeroPooledItems" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.InstantiateWithNullPoolableObjectFactory" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.NoMoreUsableAfterClose" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.PassivateBusyObjectsBeforeClose" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[Cannot figure out why this is failing?]]></message>
                    </reason>
                  </test-case>
                  <test-case name="Spring.Pool.SimplePoolTests.PassivateObjectOnReturn" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.ThrowsExceptionWhenOutOfItemsBecauseFailedValidation" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Pool.SimplePoolTests.WaitOnBorrowWhenExausted" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="StessSimplePool" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Pool.StessSimplePool.ScalingAgainstIncreasingNumberOfThreads" executed="False" result="Ignored">
                    <reason>
                      <message><![CDATA[a try for a stress]]></message>
                    </reason>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Proxy" executed="True" result="Success" success="True" time="0.703" asserts="0">
            <results>
              <test-suite type="TestFixture" name="CompositionProxyTypeBuilderTests" executed="True" result="Success" success="True" time="0.094" asserts="0">
                <results>
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesAttributeToType" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesSpecificMemberAttributesToSpecificMethodOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesSpecificTypeAttributeWithNoPropertySettersToTargetTypeUsingCustomAttributeBuilder" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesStarredMemberAttributesToAllMethods" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotGenerateProxyNameIfOneIsExplicitlySupplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodParameterAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodReturnValueAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetTypeAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.GeneratesProxyNameIfNoneExplicitlySupplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ImplementsInterfaceHierarchy" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyGenericInterface" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyGenericMethod" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySecurityAttribute" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeNotInstantiableWithDefaultValues" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithArrayConstructor" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithArrayProperty" executed="True" result="Success" success="True" time="0.016" asserts="9" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithPropertySetterChangingDefaultBehavior" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithPublicEnumProperty" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithReadOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodParameterAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodParameterMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodReturnValueAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodReturnValueMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetTypeAttributes" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyWebServiceAttribute" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.BuildProxyWithNothingSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.CheckInterfaceImplementation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.DoesNotProxyInterfaceMethodAttributes" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.DoesNotProxyNonProxiableInterface" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.ForcesNonProxiableInterfacesToBeProxied" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.OnClassThatDoesntImplementAnyInterfaces" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.ProxyInnerClass" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.CompositionProxyTypeBuilderTests.SetsInterfacesToProxy" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DynamicProxyManagerTests" executed="True" result="Success" success="True" time="0.406" asserts="0">
                <results>
                  <test-case name="Spring.Proxy.DynamicProxyManagerTests.CreateTypeBuilderIsThreadSafe" executed="True" result="Success" success="True" time="0.391" asserts="20" />
                  <test-case name="Spring.Proxy.DynamicProxyManagerTests.CreateTypeBuilderMustNotBeCalledTwiceWithSameArguments" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ExplicitCompositionProxyTypeBuilderTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                <results>
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesAttributeToType" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesSpecificMemberAttributesToSpecificMethodOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesSpecificTypeAttributeWithNoPropertySettersToTargetTypeUsingCustomAttributeBuilder" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesStarredMemberAttributesToAllMethods" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotGenerateProxyNameIfOneIsExplicitlySupplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodParameterAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodReturnValueAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetTypeAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.GeneratesProxyNameIfNoneExplicitlySupplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ImplementsInterfaceHierarchy" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyGenericInterface" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyGenericMethod" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySecurityAttribute" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeNotInstantiableWithDefaultValues" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithArrayConstructor" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithPropertySetterChangingDefaultBehavior" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithPublicEnumProperty" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithReadOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodParameterAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodParameterMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodReturnValueAttributes" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodReturnValueMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetTypeAttributes" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyWebServiceAttribute" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.BuildProxyWithNothingSet" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.CheckInterfaceImplementation" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.DoesNotProxyInterfaceMethodAttributes" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.DoesNotProxyNonProxiableInterface" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.ForcesNonProxiableInterfacesToBeProxied" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.OnClassThatDoesntImplementAnyInterfaces" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.ProxyInnerClass" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.CompositionProxyTypeBuilderTests.SetsInterfacesToProxy" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Proxy.ExplicitCompositionProxyTypeBuilderTests.ExplicitInterfaceImplementation" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="InheritanceProxyTypeBuilderTests" executed="True" result="Success" success="True" time="0.125" asserts="0">
                <results>
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesAttributeToType" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesSpecificMemberAttributesToSpecificMethodOnly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesSpecificTypeAttributeWithNoPropertySettersToTargetTypeUsingCustomAttributeBuilder" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.AppliesStarredMemberAttributesToAllMethods" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotGenerateProxyNameIfOneIsExplicitlySupplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodParameterAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetMethodReturnValueAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.DoesNotProxyTargetTypeAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.GeneratesProxyNameIfNoneExplicitlySupplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ImplementsInterfaceHierarchy" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyGenericInterface" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyGenericMethod" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySecurityAttribute" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeNotInstantiableWithDefaultValues" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithArrayConstructor" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithArrayProperty" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithPropertySetterChangingDefaultBehavior" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithPublicEnumProperty" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxySpecificTargetTypeAttributeWithReadOnlyProperty" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodParameterAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodParameterMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodReturnValueAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetMethodReturnValueMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyTargetTypeAttributes" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.AbstractProxyTypeBuilderTests.ProxyWebServiceAttribute" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.CheckInheritType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.DoesNotImplementFinalMethodThatDoesNotImplementInterface" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.DoesNotProxyNonProxiableInterface" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.DoesNotProxyTargetVirtualMethodAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.DoesNotProxyTargetVirtualMethodParameterAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.DoesNotProxyTargetVirtualMethodReturnValueAttributesWithProxyTargetAttributesEqualsFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ForcesNonProxiableInterfacesToBeProxied" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ImplementFinalMethodThatImplementsInterface" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.OnClassThatDoesntImplementAnyInterfaces" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.OverrideVirtualMethod" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ProxyInnerClass" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ProxyTargetVirtualMethodAttributes" executed="True" result="Success" success="True" time="0.016" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ProxyTargetVirtualMethodParameterAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ProxyTargetVirtualMethodParameterMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ProxyTargetVirtualMethodReturnValueAttributes" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.ProxyTargetVirtualMethodReturnValueMultipleAttributes" description="SPRNET-1134" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.SetsInterfacesToProxy" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Proxy.InheritanceProxyTypeBuilderTests.WithSealedClass" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Reflection" executed="True" result="Success" success="True" time="0.563" asserts="0">
            <results>
              <test-suite type="Namespace" name="Dynamic" executed="True" result="Success" success="True" time="0.563" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="DynamicConstructorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.DynamicConstructorTests.TestConstructors" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DynamicFieldTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.CannotReadPrivateReadOnlyFieldIfNoReflectionPermission" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[TODO: this works as expected when run using TD.NET & R# (in VS2k8), but fails with nant/NET 2.0 ?!?]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.CannotSetStaticReadOnlyField" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.CanReadPrivateReadOnlyField" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.TestAttemptingToSetFieldOfValueTypeInstance" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.TestInstanceFields" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.TestStaticFieldsOfClass" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicFieldTests.TestStaticFieldsOfStruct" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DynamicIndexerTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.DynamicIndexerTests.TestIndexers" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DynamicMethodTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.CanAcceptImplicitlyConvertedTypesAsSubstitutesForArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.CanCreatePrivateMethodButThrowsOnInvoke" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.CanCreateWithRestrictedPermissions" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.PassInvalidNumberOfArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.PassNullableArguments" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.TestArgumentTypeCasts" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.TestInstanceMethods" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.TestRefOutMethods" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicMethodTests.TestStaticMethods" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="DynamicPropertyTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.AccessInheritedPropertyFromBaseClass" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.AccessInheritedPropertyFromDerivedClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.AccessOverriddenProperty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.TestForRestrictiveGetter" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[test N/A anymore due to System.Reflection.Emit.DynamicMethod]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.TestForRestrictiveSetter" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[test N/A anymore due to System.Reflection.Emit.DynamicMethod]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.TestInstanceProperties" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.BasePropertyTests.TestStaticProperties" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.TestAttemptingToSetPropertyOfValueTypeInstance" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.TestNonReadableProperties" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.TestNonWritableInstanceProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.TestNonWritableStaticProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.DynamicPropertyTests.TestSetIncompatibleType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="SafeFieldTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.CannotReadPrivateReadOnlyFieldIfNoReflectionPermission" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[TODO: this works as expected when run using TD.NET & R# (in VS2k8), but fails with nant/NET 2.0 ?!?]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.CannotSetStaticReadOnlyField" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.CanReadPrivateReadOnlyField" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.TestAttemptingToSetFieldOfValueTypeInstance" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.TestInstanceFields" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.TestStaticFieldsOfClass" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.DynamicFieldTests.TestStaticFieldsOfStruct" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.TestInstanceMembersOfClass" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.TestInstanceMembersOfStruct" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.TestSetIncompatibleType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.TestStaticMembersOfClass" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.TestStaticMembersOfStruct" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                      <test-case name="Spring.Reflection.Dynamic.SafeFieldTests.ThrowsOnNullField" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="SafePropertyTests" executed="True" result="Success" success="True" time="0.375" asserts="0">
                    <results>
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.AccessInheritedPropertyFromBaseClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.AccessInheritedPropertyFromDerivedClass" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.AccessOverriddenProperty" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.TestForRestrictiveGetter" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[test N/A anymore due to System.Reflection.Emit.DynamicMethod]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.TestForRestrictiveSetter" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[test N/A anymore due to System.Reflection.Emit.DynamicMethod]]></message>
                        </reason>
                      </test-case>
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.TestInstanceProperties" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.BasePropertyTests.TestStaticProperties" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.CanGetSetComplexIndexer" executed="True" result="Success" success="True" time="0.344" asserts="6" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.CanGetSetSimpleIndexer" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.CanGetSetSimpleProperty" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.TestForRestrictiveGetterWithSafeWrapper" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Reflection.Dynamic.SafePropertyTests.TestForRestrictiveSetterWithSafeWrapper" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Threading" executed="True" result="Success" success="True" time="0.797" asserts="0">
            <results>
              <test-suite type="TestFixture" name="CallContextStorageTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Threading.CallContextStorageTests.CommonThreadStorageTests.AllowReplaceData" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Threading.CallContextStorageTests.CommonThreadStorageTests.FreeNamedDataSlotRemovesData" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Threading.CallContextStorageTests.CommonThreadStorageTests.IsCaseSensitive" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Threading.CallContextStorageTests.CommonThreadStorageTests.UnknownKeyReturnsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Threading.CallContextStorageTests.CommonThreadStorageTests.UsesDistinguishedStorageOnDifferentThreads" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LatchTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Threading.LatchTest.BossWorkerDemo" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LogicalThreadContextTest" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Threading.LogicalThreadContextTest.StorageIsUsedByFacadeMethods" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Threading.LogicalThreadContextTest.StorageMayBeSetMoreThanOnce" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Threading.LogicalThreadContextTest.StorageMustNotBeNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SemaphoreTest" executed="True" result="Success" success="True" time="0.625" asserts="0">
                <results>
                  <test-case name="Spring.Threading.SemaphoreTest.AcquireReleaseInDifferentThreads" executed="True" result="Success" success="True" time="0.297" asserts="0" />
                  <test-case name="Spring.Threading.SemaphoreTest.AquireInSameThrad" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Threading.SemaphoreTest.AquireReleaseInSameThread" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Threading.SemaphoreTest.AttemptInSameThread" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Threading.SemaphoreTest.AttemptReleaseInDifferentThreads" executed="True" result="Success" success="True" time="0.313" asserts="0" />
                  <test-case name="Spring.Threading.SemaphoreTest.AttemptWithNegativeMillisInSameThread" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Threading.SemaphoreTest.ReleaseMultipleBadArgument" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Threading.SemaphoreTest.ReleaseMultipleTimesInSameThread" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Threading.SemaphoreTest.TimetoMillis" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Threading.SemaphoreTest.UsingLikeAMutex" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SyncHolderTest" executed="True" result="Success" success="True" time="0.156" asserts="0">
                <results>
                  <test-case name="Spring.Threading.SyncHolderTest.CanBeUsedWithTheUsingCSharpIdiomToAcquireAnIsync" executed="True" result="Success" success="True" time="0.047" asserts="0" />
                  <test-case name="Spring.Threading.SyncHolderTest.CanBeUsedWithTheUsingCSharpIdiomToAttemptOnAnISync" executed="True" result="Success" success="True" time="0.109" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ThreadStaticStorageTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Threading.ThreadStaticStorageTests.CommonThreadStorageTests.AllowReplaceData" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Threading.ThreadStaticStorageTests.CommonThreadStorageTests.FreeNamedDataSlotRemovesData" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Threading.ThreadStaticStorageTests.CommonThreadStorageTests.IsCaseSensitive" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Threading.ThreadStaticStorageTests.CommonThreadStorageTests.UnknownKeyReturnsNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Threading.ThreadStaticStorageTests.CommonThreadStorageTests.UsesDistinguishedStorageOnDifferentThreads" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Util" executed="True" result="Success" success="True" time="0.625" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ArrayUtilsTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Util.ArrayUtilsTests.AreEqual" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ArrayUtilsTests.AreEqualWithBadArguments" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ArrayUtilsTests.ConcatsArrays" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ArrayUtilsTests.ConcatsNullArrays" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ArrayUtilsTests.HasLengthTests" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="AssertUtilsTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasElementsArgumentContainsNonNullsOnly" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasElementsArgumentContainsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasElementsArgumentIsEmpty" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasElementsArgumentIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasLengthArgumentHasElements" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasLengthArgumentHasElementsWithMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasLengthArgumentIsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasLengthArgumentIsEmptyWithMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasLengthArgumentIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasLengthArgumentIsNullWithMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasText" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasTextWithMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasTextWithValidText" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentHasTextWithValidTextAndMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentNotNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.ArgumentNotNullWithMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.IsTrue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.IsTrueValidExpression" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.IsTrueWithMessageValidExpression" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.IsTrueWithMesssage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.StateTrue" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.UnderstandsMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.AssertUtilsTests.UnderstandsType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CollectionUtilsTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-case name="Spring.Util.CollectionUtilsTests.AddCollectionDoesNotImplementAdd" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.AddNullCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.AddNullObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.AddValidElement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsAllDoesNotImplementContains" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsAllElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsAllElementsWithNoElementsEitherCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsAllElementsWithNoElementsInSourceCollection" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsAllNullTargetCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsAllSourceNullCollection" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsCollectionThatDoesNotImplementContains" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsDoesNotContainElement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsNullCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsNullObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ContainsValidElement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.DoesNotContainAllElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.EmptyArrayElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.FindFirstMatchReturnsFirstMatch" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.FindFirstMatchReturnsNullIfAnyInputIsEmpty" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.CollectionUtilsTests.FindValueOfType" executed="True" result="Success" success="True" time="0.016" asserts="7" />
                  <test-case name="Spring.Util.CollectionUtilsTests.IsCollectionEmptyOrNull" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.CollectionUtilsTests.IsDictionaryEmptyOrNull" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllAllElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllNoElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllSomeElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllSourceNullCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllTargetCollectionDoesNotImplementContains" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllTargetCollectionDoesNotImplementRemove" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.RemoveAllTargetNullCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.CollectionUtilsTests.StableSorting" executed="True" result="Success" success="True" time="0.016" asserts="6" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ToArray" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ToArrayAllElements" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.CollectionUtilsTests.ToArrayNullTargetCollection" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigXmlDocumentTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Util.ConfigXmlDocumentTests.CanConfigFilenameAndLine" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ConfigXmlDocumentTests.LoadReaderStoresTextPosition" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.ConfigXmlDocumentTests.LoadStreamStoresTextPosition" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                  <test-case name="Spring.Util.ConfigXmlDocumentTests.LoadTextReaderStoresTextPosition" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.ConfigXmlDocumentTests.LoadXmlStoresTextPosition" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DefensiveEventRaiserTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Util.DefensiveEventRaiserTests.RaiseSwallowsExceptionRaisedByHandlerButCallsAllOtherHandlers" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.DefensiveEventRaiserTests.RaiseSwallowsExceptionRaisedByHandlers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DelegateInfoTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="Spring.Util.DelegateInfoTests.GetParameterTypes" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.DelegateInfoTests.GetParameterTypesWithNoArgHandler" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.DelegateInfoTests.GetReturnType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.DelegateInfoTests.GetReturnTypeWithNonVoidReturningDelegate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.DelegateInfoTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.DelegateInfoTests.InstantiationWithBadType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsDelegate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsDelegateWithBadType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsDelegateWithNullType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsSignatureCompatible" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsSignatureCompatibleStaticVersion" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsSignatureCompatibleWithBadMethods" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.DelegateInfoTests.IsSignatureCompatibleWithInnerClassStaticMethod" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="EventRaiserTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Util.EventRaiserTests.Raise" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.EventRaiserTests.RaiseWithAnEventHandlerThatThrowsAnException" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.EventRaiserTests.RaiseWithBadNumberOfArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.EventRaiserTests.RaiseWithNullEvent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="NumberUtilsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Util.NumberUtilsTests.Add" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.NumberUtilsTests.BitwiseAnd" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                  <test-case name="Spring.Util.NumberUtilsTests.BitwiseNot" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                  <test-case name="Spring.Util.NumberUtilsTests.BitwiseOr" executed="True" result="Success" success="True" time="0.000" asserts="11" />
                  <test-case name="Spring.Util.NumberUtilsTests.BitwiseXor" executed="True" result="Success" success="True" time="0.000" asserts="13" />
                  <test-case name="Spring.Util.NumberUtilsTests.CoercesTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.NumberUtilsTests.IsDecimal" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                  <test-case name="Spring.Util.NumberUtilsTests.IsInteger" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                  <test-case name="Spring.Util.NumberUtilsTests.IsNumber" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                  <test-case name="Spring.Util.NumberUtilsTests.Negate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.NumberUtilsTests.NegateNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.NumberUtilsTests.NegateString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ObjectUtilsTests" executed="True" result="Success" success="True" time="0.078" asserts="0">
                <results>
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateElementAtIndex" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateElementAtIndexViaIEnumerable" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateElementAtNegativeIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateElementAtNegativeIndexViaIEnumerable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateElementAtOutOfRangeIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateElementAtOutOfRangeIndexViaIEnumerable" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.EnumerateFirstElement" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateGenericTypeWithArguments" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeThrowingWithinPublicConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithAbstractType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithBadCtorArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithCtorArgs" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithCtorWithNoArgs" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithInterfaceType" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithNullCtor" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithNullType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithOpenGenericType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithPrivateCtor" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ObjectUtilsTests.InstantiateTypeWithTypeExposingNoZeroArgCtor" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ObjectUtilsTests.IsAssignableAndNotTransparentProxyWithProxy" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.IsSimpleProperty" executed="True" result="Success" success="True" time="0.000" asserts="14" />
                  <test-case name="Spring.Util.ObjectUtilsTests.NullSafeEqualsBothEquals" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.NullSafeEqualsNotEqual" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.NullSafeEqualsWithBothNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.NullSafeEqualsWithFirstNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ObjectUtilsTests.NullSafeEqualsWithSecondNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PathMatcherTest" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-case name="Spring.Util.PathMatcherTest.TestFilesInDataPathMatcher" executed="True" result="Success" success="True" time="0.047" asserts="416" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PatternMatchUtilsTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
              <test-suite type="TestFixture" name="PropertiesTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Util.PropertiesTests.Continuation" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.PropertiesTests.EscapedCharactersInValue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.PropertiesTests.GetPropertyWithDefault" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.PropertiesTests.Instantiation" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.PropertiesTests.ListAndLoad" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.PropertiesTests.Remove" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.PropertiesTests.SeperatorEscapedWithinKey" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.PropertiesTests.SimpleProperties" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.PropertiesTests.Store" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.PropertiesTests.WhitespaceProperties" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ReflectionUtilsMemberwiseCopyTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Util.ReflectionUtilsMemberwiseCopyTests.DifferentTypesForbidden" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsMemberwiseCopyTests.MediumTrustAllowsCopyingBetweenTypesFromSameModule" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsMemberwiseCopyTests.MediumTrustThrowsSecurityExceptionWhenCopyingBetweenTypesFromDifferentModules" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ReflectionUtilsMemberwiseCopyTests.TestBaseTypeAllowed" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsMemberwiseCopyTests.TestDerivedTypeAllowed" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsMemberwiseCopyTests.TestSameType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ReflectionUtilsTests" executed="True" result="Success" success="True" time="0.172" asserts="0">
                <results>
                  <test-case name="Spring.Util.ReflectionUtilsTests.CanGetFriendlyNamesForGenericTypes" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreatCustomAttriubtesFromCustomAttributeData" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreatCustomAttriubtesFromCustomAttributeDataWithArrayOfEnumsSetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreatCustomAttriubtesFromCustomAttributeDataWithArrayOfEnumsSetOnProperty" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreatCustomAttriubtesFromCustomAttributeDataWithGenericCollectionTypeSetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreatCustomAttriubtesFromCustomAttributeDataWithSimpleTypeSetInConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreatCustomAttriubtesFromCustomAttributeDataWithSingleEnum" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeForNonAttributeType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeFromSourceAttribute" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeSunnyDayScenarios" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeUsingDefaultValuesForTheConstructor" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeUsingExplicitValuesForTheConstructor" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeUsingExplicitValuesForTheConstructorAndASourceAttribute" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.CreateCustomAttributeWithNullType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetConstructorByArgumentValuesResolvesToExactMatchIfAvailable" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetCustomAttributesOnMethod" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetCustomAttributesOnType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetDefaultValue" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetDefaultValueWithZeroValueEnumType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetExplicitBaseExceptionWithInnerException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetExplicitBaseExceptionWithInnerExceptions" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetExplicitBaseExceptionWithNoInnerException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetExplicitBaseExceptionWithNullReferenceExceptionAsRootException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetInterfaces" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithBadMatchNotStrict" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithBadMatchStrict" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithBadReturnTypeMatchNotStrict" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithBadReturnTypeMatchStrict" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithNullMethodsToFind" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithNullTypeToFindOn" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMatchingMethodsWithPerfectMatch" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMethod" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMethodByArgumentValuesMatchesNullableArgs" executed="True" result="Success" success="True" time="0.000" asserts="9" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMethodByArgumentValuesResolvesToExactMatchIfAvailable" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMethodIsCaseInsensitive" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetMethodWithExplicitInterfaceMethod" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetParameterTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetParameterTypesWithMethodThatHasRefParameters" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetParameterTypesWithNullMethodInfo" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetParameterTypesWithNullParametersArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetSignature" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetTypeOfOrType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetTypeOfOrTypeWithNonNullType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetTypeOfOrTypeWithNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetTypesWithEmptyArrayArgument" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.GetTypesWithNullArrayArgument" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.HasAtLeastOneMethodWithName" executed="True" result="Success" success="True" time="0.000" asserts="10" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeNullable_WhenFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeNullable_WhenTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithInternalNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithInternalNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithPrivateNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithPrivateNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithProtectedInternalNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithProtectedInternalNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithProtectedNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithProtectedNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithPublicNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithPublicNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleFromFriendlyAssemblyWithPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithInternalNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithInternalNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithPrivateNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithPrivateNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithProtectedInternalNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithProtectedInternalNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithProtectedNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithProtectedNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithPublicNestedTypeOnInternalType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithPublicNestedTypeOnPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.IsTypeVisibleWithPublicType" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.MapsInterfaceMethodsToImplementation" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.MethodIsOnOneOfTheseInterfaces" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.MethodIsOnOneOfTheseInterfacesMultiple" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.MethodIsOnOneOfTheseInterfacesWithNonInterfaceType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.MethodIsOnOneOfTheseInterfacesWithNullMethod" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.MethodIsOnOneOfTheseInterfacesWithNullTypes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ParameterTypesDontMatchWithNonMatchingArgs" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ParameterTypesMatch" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ParameterTypesMatchWithNullArgs" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.PropertyIsIndexer" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ShouldPickDefaultConstructor" description="http://jira.springframework.org/browse/SPRNET-992" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ShouldPickDefaultConstructorWithoutArgs" description="http://jira.springframework.org/browse/SPRNET-992" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ShouldPickSingleArgConstructor" description="http://jira.springframework.org/browse/SPRNET-992" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ToInterfaceArrayFromType" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.ToInterfaceArrayFromTypeWithNonInterface" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.ReflectionUtilsTests.UnwrapsTargetInvocationException" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SerializationTestUtils" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Util.SerializationTestUtils.WithNonSerializableObject" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.SerializationTestUtils.WithSerializableObject" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="StringUtilsTests" executed="True" result="Success" success="True" time="0.063" asserts="0">
                <results>
                  <test-case name="Spring.Util.StringUtilsTests.ArrayToDelimitedString" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.CollectionToDelimitedString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.ConvertEscapedCharactersAll" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.ConvertEscapedCharactersNoEscapedCharacters" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.ConvertUnsupportedEscapedCharacters" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.DelimitedListToStringArray" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Util.StringUtilsTests.DelimitedListToStringArrayWithEmptyStringDelimiter" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Util.StringUtilsTests.DelimitedListToStringArrayWithGuff" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurround" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundEmptyStringWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundNullWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundNullWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundObjectWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundObjectWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.FullSurroundWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsIgnoresEmptyExpression" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithACoupleOfDuplicatedValidExpressions" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithACoupleOfUniqueValidExpressions" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithANestedExpression" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithAStringThatDoesntHaveAnyExpressions" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithAValidExpression" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithMalformedExpression" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.GetAntExpressionsWithNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.HasLengthTests" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.StringUtilsTests.HasTextTests" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Util.StringUtilsTests.IsNullOrEmptyTests" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Util.StringUtilsTests.SetAntExpressionWithEmptyStringExpression" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.SetAntExpressionWithMultipleEvaluations" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.SetAntExpressionWithNullReplacementValue" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.SetAntExpressionWithNullText" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.SplitAcceptsWhitespaceDelimiters" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SplitAddsEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SplitTests" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                  <test-case name="Spring.Util.StringUtilsTests.SplitWithQuotedStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.StripFirstAndLastCharacterWithEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.StripFirstAndLastCharacterWithNull" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.StripFirstAndLastCharacterWithReallyShortStrings" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Util.StringUtilsTests.StripFirstAndLastCharacterWorksLikeACharm" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Util.StringUtilsTests.Surround" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SurroundEmptyStringWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SurroundNullWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SurroundNullWithNulls" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SurroundObject" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SurroundObjectWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.StringUtilsTests.SurroundWithEmptyStrings" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SystemUtilsTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Util.SystemUtilsTests.Clr4Runtime" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.SystemUtilsTests.ThreadIdIsInt" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="Spring.Util.SystemUtilsTests.ThreadIdIsName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="UniqueKeyTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Util.UniqueKeyTests.CreateInstanceScopedKey" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Util.UniqueKeyTests.CreateInstanceScopedKeyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.UniqueKeyTests.CreateTypeScopedKey" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Util.UniqueKeyTests.CreateTypeScopedKeyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Util.UniqueKeyTests.MustNotCallObjectSignatureWithType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Validation" executed="True" result="Success" success="True" time="1.406" asserts="0">
            <results>
              <test-suite type="Namespace" name="Actions" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ErrorMessageActionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WhenActionIsNotExecutedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WhenInvalid" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WhenValid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WithEmptyMesageId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WithEmptyProviders" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WithNullMesageId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WithNullProviders" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Validation.Actions.ErrorMessageActionTests.WithWhitespaceMesageId" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ExceptionActionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Actions.ExceptionActionTests.WhenInvalidThrowCustomException" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Actions.ExceptionActionTests.WhenInvalidThrowCustomExceptionUsingSetter" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Actions.ExceptionActionTests.WhenInvalidThrowDefaultException" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="Spring.Validation.Actions.ExceptionActionTests.WhenValid" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ExpressionActionTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Actions.ExpressionActionTests.WhenActionIsNotExecutedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Actions.ExpressionActionTests.WhenInvalid" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                      <test-case name="Spring.Validation.Actions.ExpressionActionTests.WhenValid" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="AnyValidatorGroupTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Validation.AnyValidatorGroupTests.DefaultsToFastValidate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Validation.AnyValidatorGroupTests.WhenAllValidatorsReturnFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.AnyValidatorGroupTests.WhenAllValidatorsReturnTrue" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Validation.AnyValidatorGroupTests.WhenGroupIsNotValidatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.AnyValidatorGroupTests.WhenSingleValidatorReturnsTrueAndFastValidateIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                  <test-case name="Spring.Validation.AnyValidatorGroupTests.WhenSingleValidatorReturnsTrueFastAndFastValidateIsTrue" executed="True" result="Success" success="True" time="0.000" asserts="6" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CollectionValidatorTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-case name="Spring.Validation.CollectionValidatorTests.DefaultsToFastValidateIsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestCollection" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestDifferentCollectionTypes" executed="True" result="Success" success="True" time="0.031" asserts="6" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestNestingCollectionValidator" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestNestingCollectionValidatorWithXMLDescription" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestValidationErrorsAreCollected" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestWithNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Validation.CollectionValidatorTests.TestWithWrongArgumentType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ExclusiveValidatorGroupTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.DefaultsToFastValidate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.WhenAllValidatorsReturnFalse" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.WhenAllValidatorsReturnTrue" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.WhenGroupIsNotValidatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.WhenMultipleValidatorsReturnTrueAndFastValidate" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.WhenMultipleValidatorsReturnTrueAndNotFastValidate" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Validation.ExclusiveValidatorGroupTests.WhenSingleValidatorReturnsTrue" executed="True" result="Success" success="True" time="0.000" asserts="7" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValidationErrorsTests" executed="True" result="Success" success="True" time="1.094" asserts="0">
                <results>
                  <test-case name="Spring.Validation.ValidationErrorsTests.AddErrorSunnyDay" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.AddErrorWithNullKey" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.AddErrorWithNullMessage" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.AddTwoErrorsSameKey" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.ContainsNoErrorsDirectlyAfterInstantiation" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.EmptyErrorsReturnEmptyCollections" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.MergeErrors" executed="True" result="Success" success="True" time="0.000" asserts="8" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.MergeErrorsWithNull" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.ResolveErrorsWithoutMessageSource" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Validation.ValidationErrorsTests.SerializeErrors" executed="True" result="Success" success="True" time="1.078" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValidationExceptionTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Validation.ValidationExceptionTests.InstantiationSupplyingMessageAndValidationErrors" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.ValidationExceptionTests.InstantiationSupplyingMessageValidationErrorsAndRootCause" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                  <test-case name="Spring.Validation.ValidationExceptionTests.InstantiationSupplyingValidationErrors" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Validation.ValidationExceptionTests.InstantiationUsingDefaultConstructor" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="Spring.Validation.ValidationExceptionTests.TestExceptionSerialization" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValidationNamespaceParserTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="Spring.Validation.ValidationNamespaceParserTests.WhenConfigFileIsNotValid" executed="True" result="Success" success="True" time="0.016" asserts="1" />
                  <test-case name="Spring.Validation.ValidationNamespaceParserTests.WhenConfigFileIsValid" executed="True" result="Success" success="True" time="0.016" asserts="36" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValidatorGroupTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="Spring.Validation.ValidatorGroupTests.WhenAllValidatorsReturnFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.ValidatorGroupTests.WhenAllValidatorsReturnFalseFast" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.ValidatorGroupTests.WhenAllValidatorsReturnTrue" executed="True" result="Success" success="True" time="0.016" asserts="3" />
                  <test-case name="Spring.Validation.ValidatorGroupTests.WhenGroupIsNotValidatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                  <test-case name="Spring.Validation.ValidatorGroupTests.WhenSingleValidatorReturnsTrue" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValidatorReferenceTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="Spring.Validation.ValidatorReferenceTests.ContextNarrowing" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                  <test-case name="Spring.Validation.ValidatorReferenceTests.FalseValidatorReference" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.ValidatorReferenceTests.FalseValidatorReferenceNotEvaluatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                  <test-case name="Spring.Validation.ValidatorReferenceTests.TrueValidatorReference" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Validators" executed="True" result="Success" success="True" time="0.109" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="ConditionValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.ConditionValidatorTests.FalseScalarExpression" executed="True" result="Success" success="True" time="0.000" asserts="4" />
                      <test-case name="Spring.Validation.Validators.ConditionValidatorTests.StraightFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.ConditionValidatorTests.StraightTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.ConditionValidatorTests.TrueScalarExpression" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.ConditionValidatorTests.WhenValidatorIsNotEvaluatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="CreditCardValidatorIntegrationTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.CreditCardValidatorIntegrationTests.CreditCardValidatorTests" executed="True" result="Success" success="True" time="0.016" asserts="4" />
                      <test-case name="Spring.Validation.Validators.CreditCardValidatorIntegrationTests.ErrorTests" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Validation.Validators.CreditCardValidatorIntegrationTests.WithNullCardType" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="CreditCardValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.CreditCardValidatorTests.Validate" executed="True" result="Success" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="EmailValidatorIntegrationTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.EmailValidatorIntegrationTests.EmailValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="EmailValidatorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.EmailValidatorTests.Validate" executed="True" result="Success" success="True" time="0.000" asserts="12" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ISBNValidatorIntegrationTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.ISBNValidatorIntegrationTests.ISBNValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="ISBNValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.ISBNValidatorTests.Validate" executed="True" result="Success" success="True" time="0.000" asserts="16" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RegularExpressionValidatorTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.AllowPartialMatching" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.CaseInsensitiveStringMatching" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.CaseSensitiveStringMatching" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.EmptyStringValidatesToTrue" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.SunnyDay_Valid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.SunnyDayFailure_Invalid" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.WhenValidatorIsNotEvaluatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.WhitespaceStringDoesntEvaluateToTrueByDefault" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.WhitespaceStringOnlyValidatesToTrueWhenGivenMatchingRegex" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.WithNonString" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                      <test-case name="Spring.Validation.Validators.RegularExpressionValidatorTests.WithNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RequiredValidatorTests" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WhenValidatorIsNotEvaluatedBecauseWhenExpressionReturnsFalse" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithEmptyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithKosherChar" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithKosherDate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithKosherDouble" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithKosherFloat" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithKosherString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithMaxDate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithMinChar" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithMinDate" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithNegativeNumber" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithNull" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithPositiveNumber" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithWhitespaceChar" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithWhitespaceOnlyString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithZeroDouble" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithZeroFloat" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="Spring.Validation.Validators.RequiredValidatorTests.WithZeroNumber" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="UrlValidatorIntegrationTests" executed="True" result="Success" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.UrlValidatorIntegrationTests.ISBNValidatorTests" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="UrlValidatorTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Spring.Validation.Validators.UrlValidatorTests.Validate" executed="True" result="Success" success="True" time="0.016" asserts="16" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>